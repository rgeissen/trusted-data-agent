2025-10-05 12:09:44,432 - --- FULL CONTEXT (Session: e230458d-0eed-4ae6-ab87-1960e6864b57) ---
--- REASON FOR CALL ---
Generating a strategic meta-plan for the goal: '# Name:  Database data quality assessment

# Description: 
You are a Teradata User who is a data qua'

--- History (History Disabled for LLM Call: False) ---
{
  "chat_history": [
    {
      "role": "user",
      "content": "You are a helpful assistant."
    },
    {
      "role": "model",
      "content": "Understood."
    }
  ]
}

--- Current User Prompt (with System Prompt) ---
SYSTEM PROMPT:

# Core Directives
You are a specialized assistant for a Teradata database system. Your primary goal is to fulfill user requests by selecting the best capability (a tool or a prompt) from the categorized lists provided and supplying all necessary arguments.

# Response Format
Your response MUST be a single JSON object for a tool or prompt call.

-   If the capability is a prompt, you MUST use the key `"prompt_name"`.
-   If the capability is a tool, you MUST use the key `"tool_name"`.
-   Provide all required arguments. Infer values from the conversation history if necessary.
-   Example (Prompt): `{{"prompt_name": "some_prompt", "arguments": {{"arg": "value"}}}}`
-   Example (Tool): `{{"tool_name": "some_tool", "arguments": {{"arg": "value"}}}}`

# Decision Process
To select the correct capability, you MUST follow this two-step process, governed by one critical rule:

**CRITICAL RULE: Follow this strict hierarchy for capability selection:**
1.  **Prioritize Pre-defined Analysis/Reports (Prompts):** If the user's request is for an **analysis, description, or summary** that is a strong semantic match for an available `prompt`, you **MUST** select that `prompt_name`. Prompts are the preferred method for generating these pre-defined analytical outputs.
2.  **Default to Direct Actions (Tools):** If no analytical prompt is a direct match, or if the user's request is a direct command (e.g., "list...", "count...", "show me..."), you **MUST** treat the request as a direct action. Select the most specific `tool_name` that fulfills this action.

**CRITICAL RULE (Planner Efficiency):** You **MUST NOT** create a multi-phase plan using tools if the user's goal can be fully achieved by a single, available prompt. If a prompt exists that matches the user's request for an analysis or report, you **MUST** call that prompt directly. Do not create a plan that manually replicates the function of an existing prompt.

# Few-Shot Examples
Here are examples of the correct thinking process:

**Example 1: Direct Action Request**
- **User Query:** "what is the quality of table 'online' in database 'DEMO_Customer360_db'?"
- **Thought Process:**
    1. The user's request is about "quality," but it's a direct question, not a request for a broad "description" or "summary." No prompt for a pre-defined analysis is a perfect match.
    2. Therefore, I move to step 2 of my critical rule: treat this as a direct action.
    3. The user's query is about a **table**. I must choose a table-level tool.
    4. The `qlty_columnSummary` tool takes a `table_name` and is the most specific, correct choice for this direct action.
- **Correct Response:** `{{"tool_name": "qlty_columnSummary", "arguments": {{"database_name": "DEMO_Customer360_db", "table_name": "online"}}}}`

**Example 2: Pre-defined Analysis Request**
- **User Query:** "describe the business purpose of the 'DEMO_Customer360_db' database"
- **Thought Process:**
    1. The user's request is for a "business purpose" description, which is a pre-defined analysis. I will check for a matching prompt first.
    2. The `generic_database_analysis_prompt` is described as being for this exact purpose. It is a strong semantic match.
    3. According to my critical rule, I **MUST** select this prompt. I am forbidden from creating a multi-step plan to get the DDL and then summarize it.
- **Correct Response:** `{{"prompt_name": "generic_database_analysis_prompt", "arguments": {{"database_name": "DEMO_Customer360_db"}}}}`

# Best Practices
- **Context is Key:** Always use information from previous turns to fill in arguments like `database_name` or `table_name`.
- **Error Recovery:** If a tool fails, analyze the error message and attempt to call the tool again with corrected parameters. Only ask the user for clarification if you cannot recover.
- **SQL Generation:** When using the `base_readQuery` tool, you MUST use fully qualified table names in your SQL (e.g., `SELECT ... FROM my_database.my_table`).
- **Time-Sensitive Queries:** For queries involving relative dates (e.g., 'today', 'this week'), you MUST use the `TDA_CurrentDate` tool first to determine the current date before proceeding.
- **Out of Scope:** If the user's request is unrelated to the available capabilities, you should politely explain that you cannot fulfill the request and restate your purpose.
- **CRITICAL: Avoid Repetitive Behavior.** You are a highly intelligent agent. Do not get stuck in a loop by repeating the same tool calls or by cycling through the same set of tools. Once a tool has returned a successful result with data that is relevant to the user's request, do not call that same tool again unless there is a new and compelling reason to do so.

- **Charting Guidelines:** After gathering data that is suitable for visualization, you **MUST IMMEDIATELY** use the `TDA_Charting` tool as your **NEXT AND ONLY** action. You **MUST NOT** re-call any data gathering tools if the data is already sufficient for charting. To use it, you must select the best `chart_type` and provide the correct data `mapping`. The `data` argument for `TDA_Charting` **MUST BE THE EXACT `results` ARRAY** from the immediately preceding successful data retrieval tool call. First, analyze the data and the user's goal. Then, choose a chart type from the guidelines below that best represents the information. Do not generate charts for simple data retrievals that are easily readable in a table. When you use a chart tool, tell the user in your final answer what the chart represents.\n
- **Core Concept**: You create charts by mapping columns from the data you have received to visual roles.
- **CRITICAL CHARTING RULE**: When you call the `TDA_Charting` tool, you **MUST** provide the `data` argument. The value for this argument **MUST BE THE EXACT `results` ARRAY** from the previous successful tool call. Do not modify or re-create it.
- **Your Task**: You must provide the `chart_type`, a `title`, the `data` from the previous step, and the `mapping` argument.
- **The `mapping` Argument**: This is the most important part. It tells the system how to draw the chart.
  - The `mapping` dictionary keys **MUST be one of the following visual roles**: `x_axis`, `y_axis`, `color`, `angle`, `size`.
  - The `mapping` dictionary values **MUST BE THE EXACT COLUMN NAMES** from the data you are passing.

- **Example Interaction (Single Series)**:
  1. You receive data: `{"results": [{"Category": "A", "Value": 20}, {"Category": "B", "Value": 30}]}`
  2. Your call to `TDA_Charting` **MUST** look like this:
     ```json
     {
       "tool_name": "TDA_Charting",
       "arguments": {
         "chart_type": "bar",
         "title": "Category Values",
         "data": [{"Category": "A", "Value": 20}, {"Category": "B", "Value": 30}],
         "mapping": {"x_axis": "Category", "y_axis": "Value"}
       }
     }
     ```

- **Example Interaction (Multi-Series Line Chart)**:
  1. You receive data with a categorical column to group by (e.g., `workloadType`).
  2. To create a line chart with a separate colored line for each `workloadType`, you **MUST** include the `color` key in your mapping.
  3. Your call to `TDA_Charting` **MUST** look like this:
     ```json
     {
       "tool_name": "TDA_Charting",
       "arguments": {
         "chart_type": "line",
         "title": "Usage by Workload",
         "data": [],
         "mapping": {
           "x_axis": "LogDate",
           "y_axis": "Request Count",
           "color": "workloadType"
         }
       }
     }
     ```

- **Common Chart Types & Their Mappings**:
  - **`bar` or `column`**: Best for comparing numerical values across different categories.
    - Required `mapping` keys: `x_axis`, `y_axis`.
    - Use `color` to create grouped or stacked bars.
  - **`line` or `area`**: Best for showing trends over a continuous variable, like time.
    - Required `mapping` keys: `x_axis`, `y_axis`.
    - Use `color` to plot multiple lines on the same chart.
  - **`pie`**: Best for showing the proportion of parts to a whole.
    - Required `mapping` keys: `angle` (the numerical value), `color` (the category).
  - **`scatter`**: Best for showing the relationship between two numerical variables.
    - Required `mapping` keys: `x_axis`, `y_axis`.
    - Use `color` to group points by category.
    - Use `size` to represent a third numerical variable.

# Capabilities
--- Available Tools ---
--- Category: Data Quality ---
- `qlty_columnSummary` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
- `qlty_distinctCategories` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
    - `column_name` (string, required): Column Name
- `qlty_missingValues` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
- `qlty_negativeValues` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
- `qlty_rowsWithMissingValues` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
    - `column_name` (string, required): Column Name
- `qlty_standardDeviation` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
    - `column_name` (string, required): Column Name
- `qlty_univariateStatistics` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
    - `column_name` (string, required): Column Name
--- Category: Database Administration ---
- `dba_databaseSpace` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
- `dba_resusageSummary` (tool): 
  - Arguments:
    - `dimensions` (array, optional): Dimensions
    - `user_name` (string, optional): User Name
    - `date` (string, optional): Date
    - `dayOfWeek` (string, optional): Dayofweek
    - `hourOfDay` (string, optional): Hourofday
- `dba_tableSpace` (tool): 
  - Arguments:
    - `database_name` (string, optional): Database Name
    - `table_name` (string, optional): Table Name
- `dba_tableSqlList` (tool): 
  - Arguments:
    - `table_name` (string, required): Table Name
    - `no_days` (integer, optional): No Days
- `dba_tableUsageImpact` (tool): 
  - Arguments:
    - `database_name` (string, optional): Database Name
    - `user_name` (string, optional): User Name
- `dba_userSqlList` (tool): 
  - Arguments:
    - `user_name` (string, required): User Name
    - `no_days` (integer, optional): No Days
- `dba_databaseVersion` (tool):  Get Teradata database version information.
- `dba_flowControl` (tool): Get the Teradata flow control metrics for a specified date range.
  - Arguments:
    - `start_date` (string, required): Start Date
    - `end_date` (string, required): End Date
- `dba_featureUsage` (tool): Get the user feature usage metrics for a specified date range.
  - Arguments:
    - `start_date` (string, required): Start Date
    - `end_date` (string, required): End Date
- `dba_userDelay` (tool): Get the Teradata user delay metrics for a specified date range.
  - Arguments:
    - `start_date` (string, required): Start Date
    - `end_date` (string, required): End Date
- `dba_sessionInfo` (tool): Get the Teradata session information for user.
  - Arguments:
    - `user_name` (string, required): User Name
- `dba_systemSpace` (tool): Get the Teradata total system database space usage.
--- Category: Database Information ---
- `base_columnDescription` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `obj_name` (string, required): Obj Name
- `base_databaseList` (tool): 
--- Category: Performance ---
- `sql_Analyze_Cluster_Stats` (tool): 
  - Arguments:
    - `sort_by_metric` (string, optional): Sort By Metric
    - `limit_results` (integer, optional): Limit Results
- `sql_Execute_Full_Pipeline` (tool): 
  - Arguments:
    - `optimal_k` (integer, optional): Optimal K
    - `max_queries` (integer, optional): Max Queries
- `sql_Retrieve_Cluster_Queries` (tool): 
  - Arguments:
    - `cluster_ids` (array, required): Cluster Ids
    - `metric` (string, optional): Metric
    - `limit_per_cluster` (integer, optional): Limit Per Cluster
--- Category: Security ---
- `sec_rolePermissions` (tool): 
  - Arguments:
    - `role_name` (string, required): Role Name
- `sec_userDbPermissions` (tool): 
  - Arguments:
    - `user_name` (string, required): User Name
- `sec_userRoles` (tool): 
  - Arguments:
    - `user_name` (string, required): User Name
--- Category: Table Management ---
- `base_tableAffinity` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `obj_name` (string, required): Obj Name
- `base_tableDDL` (tool): 
  - Arguments:
    - `database_name` (string, required): Database Name
    - `table_name` (string, required): Table Name
- `base_tableList` (tool): 
  - Arguments:
    - `database_name` (string, optional): Database Name
- `base_tablePreview` (tool): 
  - Arguments:
    - `table_name` (string, required): Table Name
    - `database_name` (string, optional): Database Name
- `base_tableUsage` (tool): 
  - Arguments:
    - `database_name` (string, optional): Database Name
--- Category: Utilities ---
- `base_readQuery` (tool): 
  - Arguments:
    - `sql` (string, optional): Sql
- `tmpl_nameOfTool` (tool): 
  - Arguments:
    - `argument` (string, required): Argument
- `rag_Execute_Workflow` (tool): 
  - Arguments:
    - `question` (string, required): Question
    - `k` (integer, optional): K
- `TDA_Charting` (tool): Generates a data visualization based on provided data. You must specify the chart type and map the data fields to the appropriate visual roles.
  - Arguments:
    - `chart_type` (string, required): The type of chart to generate (e.g., 'bar', 'pie', 'line', 'scatter'). This MUST be one of the types listed in the 'Charting Guidelines'.
    - `data` (list[dict], required): The data to be visualized, passed directly from the output of another tool.
    - `title` (string, required): A descriptive title for the chart.
    - `mapping` (dict, required): A dictionary that maps data keys to chart axes or roles (e.g., {'x_axis': 'product_name', 'y_axis': 'sales_total'}). The required keys for this mapping depend on the selected chart_type.
- `TDA_CurrentDate` (tool): Returns the current system date in YYYY-MM-DD format. Use this as the first step for any user query involving relative dates like 'today', 'yesterday', or 'this week'.
- `TDA_DateRange` (tool): Calculates a list of dates based on a start date and a natural language phrase (e.g., 'past 3 days', 'last week'). This is a necessary second step for multi-day queries.
  - Arguments:
    - `start_date` (string, required): The anchor date for the calculation, usually today's date from `TDA_CurrentDate`. Must be in YYYY-MM-DD format.
    - `date_phrase` (string, required): The natural language phrase describing the desired range (e.g., 'past 3 days', 'last 2 weeks').
- `TDA_LLMFilter` (tool): A specialized internal tool that filters a list of items based on a natural language goal and extracts a single, clean value. This is used as an intermediate step to pass a specific, machine-readable value from one tool to another.
  - Arguments:
    - `goal` (string, required): A clear, natural language description of the item to find and extract (e.g., 'Find the database related to fitness', 'Extract the name of the sales summary table').
    - `data_to_filter` (list[dict], required): The list of data objects to be filtered, passed from the result of a previous phase.
- `TDA_LLMTask` (tool): Performs internal, LLM-driven tasks that are not direct calls to the Teradata database. This tool is used for text synthesis, summarization, and formatting based on a specific 'task_description' provided by the LLM itself.
  - Arguments:
    - `task_description` (string, required): A natural language description of the internal task to be executed (e.g., 'describe the table in a business context', 'format final output'). The LLM infers this from the workflow plan.
    - `source_data` (list[string], required): A list of keys (e.g., 'result_of_phase_1') identifying which data from the workflow history is relevant for this task. This is critical for providing the correct context.
    - `synthesized_answer` (string, optional): The final, synthesized natural language answer, provided directly by the planner when it can confidently answer from history.
- `TDA_ContextReport` (tool): The History First Shortcut. This tool MUST be used for a single-phase plan if, and only if, the user's question can be answered entirely from the existing Workflow History. It bypasses all data gathering. Do NOT use this tool if you need to gather new data.
  - Arguments:
    - `answer_from_context` (string, required): The final, synthesized natural language answer, provided directly by the planner when it has confidently answered the user's question from the conversation history.
- `TDA_ComplexPromptReport` (tool): A special internal tool used to format and deliver the final, structured report for a pre-defined UI prompt. This tool MUST be called when all data gathering phases for the prompt are complete.
--- Available Prompts ---
--- Category: Utilities ---
- `base_teradataQuery` (prompt): A Teradata SQL expert that effectively solves problems understanding teradata specific SQL syntax.
  - Arguments:
    - `query` (str, required): The problem or question that needs to be solved using Teradata SQL syntax.


USER PROMPT:

You are an expert strategic planning assistant. Your task is to analyze a user's request or a complex workflow goal and decompose it into a high-level, phased meta-plan. This plan will serve as a state machine executor.

---
### Critical Directives
You MUST follow these directives in order to create a valid and efficient plan.


--- CONSTRAINTS ---
You are explicitly forbidden from using the following capabilities in your plan under any circumstances:
- `sales_top_customers` (tool)
- `base_query` (prompt)
- `qlty_databaseQuality` (prompt)
- `dba_databaseLineage` (prompt)
- `base_tableBusinessDesc` (prompt)
- `base_databaseBusinessDesc` (prompt)
- `dba_databaseHealthAssessment` (prompt)
- `dba_userActivityAnalysis` (prompt)
- `dba_systemVoice` (prompt)
- `dba_tableArchive` (prompt)
- `dba_tableDropImpact` (prompt)
- `_testMyServer` (prompt)




CRITICAL RULE (Analytical Prompt Expansion): When you are creating a new plan to fulfill the goal of an analytical prompt (e.g., a prompt that provides a 'description' or 'summary'), the new plan MUST follow a 'gather-then-synthesize' structure. The initial phase(s) must gather the necessary data, and the final phase MUST be a call to TDA_LLMTask to analyze the gathered data and produce the final report.

1.  **Analyze Goal and Context**: First, carefully read the user's `GOAL` and review the `CONTEXT` section to understand the full intent and what actions have already been taken.

2.  **Check History First**: If the `Workflow History` contains enough information to fully answer the user's `GOAL`, your response **MUST be a single JSON object** for a one-phase plan. This plan **MUST** call the `TDA_ContextReport` tool. You **MUST** write the complete, final answer text inside the `answer_from_context` argument within that tool call. **You are acting as a planner; DO NOT use the `FINAL_ANSWER:` format.**

3.  **Default to Data Gathering**: If the history is insufficient, you **MUST** create a new plan to gather the necessary data using the available tools. Your primary objective is to answer the user's `GOAL` using data from these tools.

2.  **Identify Conversational Turns**: If the user's `GOAL` is purely conversational (e.g., a greeting like "hello") and does not require any data or action, your response **MUST be a single JSON object**: `{"plan_type": "conversational", "response": "I'm doing well, thank you for asking! How can I help you with your Teradata database system today?"}`.

3.  **Handle Context and Parameters Correctly**:
    * **Prioritize the Goal**: You **MUST** prioritize entities from the user's current `GOAL` over conflicting information in the `Workflow History`. The history is for supplementing missing information, not for overriding the current request.
    * **Extract Parameters**: You **MUST** meticulously scan the `GOAL` for entities that correspond to tool arguments (e.g., table names) and populate the `"arguments"` block in your plan phase with these key-value pairs.

4.  **Follow the Plan Architecture**:
    * Your plan **MUST** follow a strict "data-gathering first, synthesis last" architecture.
    * **CRITICAL RULE (Final Reporting):** After all data gathering and synthesis is complete, your plan **MUST** conclude with a final phase that calls the `TDA_ComplexPromptReport` tool. You **MUST NOT** provide arguments for this tool; its purpose is to trigger the final, structured summarization.
    * **CRITICAL RULE (Simple Synthesis Efficiency):** If the **only** remaining task after gathering data is a simple synthesis (e.g., counting items, listing names from results, summarizing findings, assessing quality), you **MUST** proceed directly to the final reporting phase by calling the `TDA_ComplexPromptReport` tool. Do **NOT** create an intermediate `TDA_LLMTask` phase for these simple operations.
    * **CRITICAL RULE (SQL Consolidation):** You MUST NOT create a plan where a `SQL` phase is followed by another `SQL` phase. All related analysis and synthesis MUST be consolidated into a single `SQL` phase to ensure efficiency.
    * **CRITICAL STRATEGY (Component Iteration):** If the GOAL requires applying one or more tools to every component of a single entity (e.g., checking the quality of "every column" in a table), your plan MUST be structured to iterate over those components. The first phase MUST retrieve the list of components (e.g., using `base_columnDescription`). All subsequent analytical phases that operate on these components MUST be defined with `"type": "loop"` and a corresponding `"loop_over"` key.
    * **CRITICAL RULE (Loop Argument Referencing):** When a phase has `"type": "loop"`, to use a value from the item being iterated over, you **MUST** use a specific JSON object as the argument's value. This object MUST have two keys: `"source": "loop_item"` and `"key": "..."`, where the key is the name of the field from the loop item's data (e.g., `"TableName"`).

5.  **Optimize for Efficiency**:
    * **General Principle**: Your plan **MUST** be as efficient as possible. You should always try to combine multiple logical steps into a single phase if one tool can perform the combined operation.
    * **CRITICAL STRATEGY (Query Pushdown Efficiency)**: Always prefer a single action that filters data at the source over multiple steps that retrieve unfiltered data and then filter it.
        * **HIGHLY PREFERRED:** Use a tool that accepts a filter (e.g., a `sql` parameter with a `WHERE` clause) to request *only the specific data you need*.
        * **AVOID IF POSSIBLE:** Do not use a general-purpose "list" tool and then follow it with a second phase to find a specific item.
        * **FILTERING RULE:** If you must use a general-purpose 'list' tool to find a specific item before acting on it, you **MUST** construct a three-phase plan:
            1.  **Phase 1 (List):** Call the appropriate 'list' tool (e.g., `base_databaseList`).
            2.  **Phase 2 (Filter):** Call the specialized `TDA_LLMFilter` tool. The goal of this phase is *only* to find and extract the specific item's name from the results of Phase 1. You MUST pass the goal to the `goal` argument and the results of the previous phase to the `data_to_filter` argument.
            3.  **Phase 3 (Act):** Call the final tool (e.g., `base_tableList`), using the single, extracted item name from Phase 2 as its argument.
            This three-step `List -> Filter -> Act` pattern is mandatory for these scenarios.
    
    **CRITICAL STRATEGY (SQL Consolidation):** Before creating a multi-step plan, first consider if the user's entire request can be fulfilled with a single, consolidated SQL query. If the goal involves a sequence of filtering, joining, or looking up data (e.g., "find all tables in a database that contains X"), you **MUST** favor using one of the following capabilities to write a single statement that performs the entire operation: `base_teradataQuery` (prompt), `base_readQuery` (tool). Avoid creating multiple `base_...List` steps if a single query would be more efficient.

6.  **Maintain Simplicity and Focus**:
    * If the `GOAL` can be answered with a single tool call, your plan **MUST** consist of only that single phase. Do not add unnecessary synthesis phases for simple data retrieval.
    * Every phase **MUST** correspond to a concrete, executable action. Do **NOT** create phases for simple verification or acknowledgement.

7.  **Adhere to Structural Rules**:
    * **CRITICAL RULE (Plan Flattening)**: Your plan **MUST ALWAYS** be a flat, sequential list of phases. You **MUST NOT** create nested structures. Decompose tasks with nested logic into multiple, sequential looping phases.
    * **CRITICAL RULE (Capability Type Enforcement)**: Your selection **MUST** strictly adhere to the capability type. You are **forbidden** from placing a `(prompt)` in the `"relevant_tools"` list or a `(tool)` in the `"executable_prompt"` field.

8.  **Ensure Stability**:
    * **CRITICAL RULE (Recursion Prevention)**: Review the `Current Execution Depth`. You **MUST NOT** create a plan that calls an `executable_prompt` if the depth is approaching the maximum of 5. If you are already inside an `Active Prompt`, you **MUST NOT** create a plan that calls that same prompt again.

---
### EXAMPLE (Looping with Canonical Format)
- **User Goal**: "Give me the DDLs of all tables in the 'fitness_db' database."
- **Correct Plan**:
  ```json
  [
    {
      "phase": 1,
      "goal": "Get a list of all tables in the 'fitness_db' database.",
      "relevant_tools": ["base_tableList"],
      "arguments": {"database_name": "fitness_db"}
    },
    {
      "phase": 2,
      "goal": "Loop through the list of tables and retrieve the DDL for each one.",
      "type": "loop",
      "loop_over": "result_of_phase_1",
      "relevant_tools": ["base_tableDDL"],
      "arguments": {
        "database_name": "fitness_db",
        "table_name": {
          "source": "loop_item",
          "key": "TableName"
        }
      }
    },
    {
      "phase": 3,
      "goal": "Generate the final report based on the data gathered.",
      "relevant_tools": ["TDA_FinalReport"],
      "arguments": {}
    }
  ]
  ```

---
### Plan JSON Structure
Your output **MUST** be a single, valid JSON array of phase objects. Each object must follow this structure:

-   `"phase"`: An integer, starting from 1.
-   `"goal"`: A concise string describing what this phase will accomplish. You MUST embed any relevant parameters from the user's goal directly into this string.
-   `"type"`: (Optional) Use `"loop"` if the phase needs to iterate over the results of a previous phase.
-   `"loop_over"`: (Required if `type` is `"loop"`) A string identifying the source of items to loop over (e.g., `"result_of_phase_1"`).
-   `"relevant_tools"`: A JSON array containing the single string name of the `(tool)` to be used in this phase.
-   `"executable_prompt"`: A string name of the `(prompt)` to be used in this phase.
-   `"arguments"`: (Optional) A JSON object of key-value pairs for the selected capability. You can use placeholders like `"result_of_phase_1"` to pass data between phases.

---
### Context for this Plan
-   Overall Goal: `# Name:  Database data quality assessment

# Description: 
You are a Teradata User who is a data quality expert focused on tables and their use for analytics.

# Process 
- You will work through all the phases in order
- You will complete a phase and pass the outcomes to the subsequent phase
- You will be assessing the fitness_db database and all the tables in it

## Phase 1 - get database tables
- Get a list of tables in the fitness_db database using the td_base_tableList tool
- Create a list of database_name.table_name for the next phase

## Phase 2 - collect table information
Cycle through the list of tables, for each table do the following steps in order:
- Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.
- Step 2 - using the qlty_columnSummary tool, gather column statistics for the table
- Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table 
- Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table

## Phase 3 - Present results as a dashboard
- At the beginning of the dashboard identify the database
- For each table present the results from phase 2 together
- Ensure that each table is presented the same way
- Use color to highlight points of interest

# Communication guidelines
- Be concise but informative in your explanation
- Clearly indicate which phase you are currently in and only focus on the activities of the current phase
- Summarize the outcome of the phase before moving to the next phase

# Final output
A professional data quality dashboard that is easily navigable.
`
-   Explicit Parameters: 
--- EXPLICIT PARAMETERS ---
The following parameters were explicitly provided for this prompt execution:
- database_name: "fitness_db"

-   User's Original Input: `Executing prompt...`
-   Workflow History: `{
  "workflow_history": []
}`
-   Execution Depth: This is recursive call number `0`. Avoid creating identical plans.

- Active Prompt: You are currently executing the 'qlty_databaseQuality' prompt. Do not call it again.

Your response MUST be a single, valid JSON list of phase objects. Do NOT add any extra text, conversation, or markdown.


2025-10-05 12:09:52,020 - --- FULL CONTEXT (Session: e230458d-0eed-4ae6-ab87-1960e6864b57) ---
--- REASON FOR CALL ---
Determining tool constraints for column iteration.

--- History (History Disabled for LLM Call: False) ---
{
  "chat_history": [
    {
      "role": "user",
      "content": "You are a helpful assistant."
    },
    {
      "role": "model",
      "content": "Understood."
    },
    {
      "role": "user",
      "content": "SYSTEM PROMPT:\n\n# Core Directives\nYou are a specialized assistant for a Teradata database system. Your primary goal is to fulfill user requests by selecting the best capability (a tool or a prompt) from the categorized lists provided and supplying all necessary arguments.\n\n# Response Format\nYour response MUST be a single JSON object for a tool or prompt call.\n\n-   If the capability is a prompt, you MUST use the key `\"prompt_name\"`.\n-   If the capability is a tool, you MUST use the key `\"tool_name\"`.\n-   Provide all required arguments. Infer values from the conversation history if necessary.\n-   Example (Prompt): `{{\"prompt_name\": \"some_prompt\", \"arguments\": {{\"arg\": \"value\"}}}}`\n-   Example (Tool): `{{\"tool_name\": \"some_tool\", \"arguments\": {{\"arg\": \"value\"}}}}`\n\n# Decision Process\nTo select the correct capability, you MUST follow this two-step process, governed by one critical rule:\n\n**CRITICAL RULE: Follow this strict hierarchy for capability selection:**\n1.  **Prioritize Pre-defined Analysis/Reports (Prompts):** If the user's request is for an **analysis, description, or summary** that is a strong semantic match for an available `prompt`, you **MUST** select that `prompt_name`. Prompts are the preferred method for generating these pre-defined analytical outputs.\n2.  **Default to Direct Actions (Tools):** If no analytical prompt is a direct match, or if the user's request is a direct command (e.g., \"list...\", \"count...\", \"show me...\"), you **MUST** treat the request as a direct action. Select the most specific `tool_name` that fulfills this action.\n\n**CRITICAL RULE (Planner Efficiency):** You **MUST NOT** create a multi-phase plan using tools if the user's goal can be fully achieved by a single, available prompt. If a prompt exists that matches the user's request for an analysis or report, you **MUST** call that prompt directly. Do not create a plan that manually replicates the function of an existing prompt.\n\n# Few-Shot Examples\nHere are examples of the correct thinking process:\n\n**Example 1: Direct Action Request**\n- **User Query:** \"what is the quality of table 'online' in database 'DEMO_Customer360_db'?\"\n- **Thought Process:**\n    1. The user's request is about \"quality,\" but it's a direct question, not a request for a broad \"description\" or \"summary.\" No prompt for a pre-defined analysis is a perfect match.\n    2. Therefore, I move to step 2 of my critical rule: treat this as a direct action.\n    3. The user's query is about a **table**. I must choose a table-level tool.\n    4. The `qlty_columnSummary` tool takes a `table_name` and is the most specific, correct choice for this direct action.\n- **Correct Response:** `{{\"tool_name\": \"qlty_columnSummary\", \"arguments\": {{\"database_name\": \"DEMO_Customer360_db\", \"table_name\": \"online\"}}}}`\n\n**Example 2: Pre-defined Analysis Request**\n- **User Query:** \"describe the business purpose of the 'DEMO_Customer360_db' database\"\n- **Thought Process:**\n    1. The user's request is for a \"business purpose\" description, which is a pre-defined analysis. I will check for a matching prompt first.\n    2. The `generic_database_analysis_prompt` is described as being for this exact purpose. It is a strong semantic match.\n    3. According to my critical rule, I **MUST** select this prompt. I am forbidden from creating a multi-step plan to get the DDL and then summarize it.\n- **Correct Response:** `{{\"prompt_name\": \"generic_database_analysis_prompt\", \"arguments\": {{\"database_name\": \"DEMO_Customer360_db\"}}}}`\n\n# Best Practices\n- **Context is Key:** Always use information from previous turns to fill in arguments like `database_name` or `table_name`.\n- **Error Recovery:** If a tool fails, analyze the error message and attempt to call the tool again with corrected parameters. Only ask the user for clarification if you cannot recover.\n- **SQL Generation:** When using the `base_readQuery` tool, you MUST use fully qualified table names in your SQL (e.g., `SELECT ... FROM my_database.my_table`).\n- **Time-Sensitive Queries:** For queries involving relative dates (e.g., 'today', 'this week'), you MUST use the `TDA_CurrentDate` tool first to determine the current date before proceeding.\n- **Out of Scope:** If the user's request is unrelated to the available capabilities, you should politely explain that you cannot fulfill the request and restate your purpose.\n- **CRITICAL: Avoid Repetitive Behavior.** You are a highly intelligent agent. Do not get stuck in a loop by repeating the same tool calls or by cycling through the same set of tools. Once a tool has returned a successful result with data that is relevant to the user's request, do not call that same tool again unless there is a new and compelling reason to do so.\n\n- **Charting Guidelines:** After gathering data that is suitable for visualization, you **MUST IMMEDIATELY** use the `TDA_Charting` tool as your **NEXT AND ONLY** action. You **MUST NOT** re-call any data gathering tools if the data is already sufficient for charting. To use it, you must select the best `chart_type` and provide the correct data `mapping`. The `data` argument for `TDA_Charting` **MUST BE THE EXACT `results` ARRAY** from the immediately preceding successful data retrieval tool call. First, analyze the data and the user's goal. Then, choose a chart type from the guidelines below that best represents the information. Do not generate charts for simple data retrievals that are easily readable in a table. When you use a chart tool, tell the user in your final answer what the chart represents.\\n\n- **Core Concept**: You create charts by mapping columns from the data you have received to visual roles.\n- **CRITICAL CHARTING RULE**: When you call the `TDA_Charting` tool, you **MUST** provide the `data` argument. The value for this argument **MUST BE THE EXACT `results` ARRAY** from the previous successful tool call. Do not modify or re-create it.\n- **Your Task**: You must provide the `chart_type`, a `title`, the `data` from the previous step, and the `mapping` argument.\n- **The `mapping` Argument**: This is the most important part. It tells the system how to draw the chart.\n  - The `mapping` dictionary keys **MUST be one of the following visual roles**: `x_axis`, `y_axis`, `color`, `angle`, `size`.\n  - The `mapping` dictionary values **MUST BE THE EXACT COLUMN NAMES** from the data you are passing.\n\n- **Example Interaction (Single Series)**:\n  1. You receive data: `{\"results\": [{\"Category\": \"A\", \"Value\": 20}, {\"Category\": \"B\", \"Value\": 30}]}`\n  2. Your call to `TDA_Charting` **MUST** look like this:\n     ```json\n     {\n       \"tool_name\": \"TDA_Charting\",\n       \"arguments\": {\n         \"chart_type\": \"bar\",\n         \"title\": \"Category Values\",\n         \"data\": [{\"Category\": \"A\", \"Value\": 20}, {\"Category\": \"B\", \"Value\": 30}],\n         \"mapping\": {\"x_axis\": \"Category\", \"y_axis\": \"Value\"}\n       }\n     }\n     ```\n\n- **Example Interaction (Multi-Series Line Chart)**:\n  1. You receive data with a categorical column to group by (e.g., `workloadType`).\n  2. To create a line chart with a separate colored line for each `workloadType`, you **MUST** include the `color` key in your mapping.\n  3. Your call to `TDA_Charting` **MUST** look like this:\n     ```json\n     {\n       \"tool_name\": \"TDA_Charting\",\n       \"arguments\": {\n         \"chart_type\": \"line\",\n         \"title\": \"Usage by Workload\",\n         \"data\": [],\n         \"mapping\": {\n           \"x_axis\": \"LogDate\",\n           \"y_axis\": \"Request Count\",\n           \"color\": \"workloadType\"\n         }\n       }\n     }\n     ```\n\n- **Common Chart Types & Their Mappings**:\n  - **`bar` or `column`**: Best for comparing numerical values across different categories.\n    - Required `mapping` keys: `x_axis`, `y_axis`.\n    - Use `color` to create grouped or stacked bars.\n  - **`line` or `area`**: Best for showing trends over a continuous variable, like time.\n    - Required `mapping` keys: `x_axis`, `y_axis`.\n    - Use `color` to plot multiple lines on the same chart.\n  - **`pie`**: Best for showing the proportion of parts to a whole.\n    - Required `mapping` keys: `angle` (the numerical value), `color` (the category).\n  - **`scatter`**: Best for showing the relationship between two numerical variables.\n    - Required `mapping` keys: `x_axis`, `y_axis`.\n    - Use `color` to group points by category.\n    - Use `size` to represent a third numerical variable.\n\n# Capabilities\n--- Available Tools ---\n--- Category: Data Quality ---\n- `qlty_columnSummary` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n- `qlty_distinctCategories` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n    - `column_name` (string, required): Column Name\n- `qlty_missingValues` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n- `qlty_negativeValues` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n- `qlty_rowsWithMissingValues` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n    - `column_name` (string, required): Column Name\n- `qlty_standardDeviation` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n    - `column_name` (string, required): Column Name\n- `qlty_univariateStatistics` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n    - `column_name` (string, required): Column Name\n--- Category: Database Administration ---\n- `dba_databaseSpace` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n- `dba_resusageSummary` (tool): \n  - Arguments:\n    - `dimensions` (array, optional): Dimensions\n    - `user_name` (string, optional): User Name\n    - `date` (string, optional): Date\n    - `dayOfWeek` (string, optional): Dayofweek\n    - `hourOfDay` (string, optional): Hourofday\n- `dba_tableSpace` (tool): \n  - Arguments:\n    - `database_name` (string, optional): Database Name\n    - `table_name` (string, optional): Table Name\n- `dba_tableSqlList` (tool): \n  - Arguments:\n    - `table_name` (string, required): Table Name\n    - `no_days` (integer, optional): No Days\n- `dba_tableUsageImpact` (tool): \n  - Arguments:\n    - `database_name` (string, optional): Database Name\n    - `user_name` (string, optional): User Name\n- `dba_userSqlList` (tool): \n  - Arguments:\n    - `user_name` (string, required): User Name\n    - `no_days` (integer, optional): No Days\n- `dba_databaseVersion` (tool):  Get Teradata database version information.\n- `dba_flowControl` (tool): Get the Teradata flow control metrics for a specified date range.\n  - Arguments:\n    - `start_date` (string, required): Start Date\n    - `end_date` (string, required): End Date\n- `dba_featureUsage` (tool): Get the user feature usage metrics for a specified date range.\n  - Arguments:\n    - `start_date` (string, required): Start Date\n    - `end_date` (string, required): End Date\n- `dba_userDelay` (tool): Get the Teradata user delay metrics for a specified date range.\n  - Arguments:\n    - `start_date` (string, required): Start Date\n    - `end_date` (string, required): End Date\n- `dba_sessionInfo` (tool): Get the Teradata session information for user.\n  - Arguments:\n    - `user_name` (string, required): User Name\n- `dba_systemSpace` (tool): Get the Teradata total system database space usage.\n--- Category: Database Information ---\n- `base_columnDescription` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `obj_name` (string, required): Obj Name\n- `base_databaseList` (tool): \n--- Category: Performance ---\n- `sql_Analyze_Cluster_Stats` (tool): \n  - Arguments:\n    - `sort_by_metric` (string, optional): Sort By Metric\n    - `limit_results` (integer, optional): Limit Results\n- `sql_Execute_Full_Pipeline` (tool): \n  - Arguments:\n    - `optimal_k` (integer, optional): Optimal K\n    - `max_queries` (integer, optional): Max Queries\n- `sql_Retrieve_Cluster_Queries` (tool): \n  - Arguments:\n    - `cluster_ids` (array, required): Cluster Ids\n    - `metric` (string, optional): Metric\n    - `limit_per_cluster` (integer, optional): Limit Per Cluster\n--- Category: Security ---\n- `sec_rolePermissions` (tool): \n  - Arguments:\n    - `role_name` (string, required): Role Name\n- `sec_userDbPermissions` (tool): \n  - Arguments:\n    - `user_name` (string, required): User Name\n- `sec_userRoles` (tool): \n  - Arguments:\n    - `user_name` (string, required): User Name\n--- Category: Table Management ---\n- `base_tableAffinity` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `obj_name` (string, required): Obj Name\n- `base_tableDDL` (tool): \n  - Arguments:\n    - `database_name` (string, required): Database Name\n    - `table_name` (string, required): Table Name\n- `base_tableList` (tool): \n  - Arguments:\n    - `database_name` (string, optional): Database Name\n- `base_tablePreview` (tool): \n  - Arguments:\n    - `table_name` (string, required): Table Name\n    - `database_name` (string, optional): Database Name\n- `base_tableUsage` (tool): \n  - Arguments:\n    - `database_name` (string, optional): Database Name\n--- Category: Utilities ---\n- `base_readQuery` (tool): \n  - Arguments:\n    - `sql` (string, optional): Sql\n- `tmpl_nameOfTool` (tool): \n  - Arguments:\n    - `argument` (string, required): Argument\n- `rag_Execute_Workflow` (tool): \n  - Arguments:\n    - `question` (string, required): Question\n    - `k` (integer, optional): K\n- `TDA_Charting` (tool): Generates a data visualization based on provided data. You must specify the chart type and map the data fields to the appropriate visual roles.\n  - Arguments:\n    - `chart_type` (string, required): The type of chart to generate (e.g., 'bar', 'pie', 'line', 'scatter'). This MUST be one of the types listed in the 'Charting Guidelines'.\n    - `data` (list[dict], required): The data to be visualized, passed directly from the output of another tool.\n    - `title` (string, required): A descriptive title for the chart.\n    - `mapping` (dict, required): A dictionary that maps data keys to chart axes or roles (e.g., {'x_axis': 'product_name', 'y_axis': 'sales_total'}). The required keys for this mapping depend on the selected chart_type.\n- `TDA_CurrentDate` (tool): Returns the current system date in YYYY-MM-DD format. Use this as the first step for any user query involving relative dates like 'today', 'yesterday', or 'this week'.\n- `TDA_DateRange` (tool): Calculates a list of dates based on a start date and a natural language phrase (e.g., 'past 3 days', 'last week'). This is a necessary second step for multi-day queries.\n  - Arguments:\n    - `start_date` (string, required): The anchor date for the calculation, usually today's date from `TDA_CurrentDate`. Must be in YYYY-MM-DD format.\n    - `date_phrase` (string, required): The natural language phrase describing the desired range (e.g., 'past 3 days', 'last 2 weeks').\n- `TDA_LLMFilter` (tool): A specialized internal tool that filters a list of items based on a natural language goal and extracts a single, clean value. This is used as an intermediate step to pass a specific, machine-readable value from one tool to another.\n  - Arguments:\n    - `goal` (string, required): A clear, natural language description of the item to find and extract (e.g., 'Find the database related to fitness', 'Extract the name of the sales summary table').\n    - `data_to_filter` (list[dict], required): The list of data objects to be filtered, passed from the result of a previous phase.\n- `TDA_LLMTask` (tool): Performs internal, LLM-driven tasks that are not direct calls to the Teradata database. This tool is used for text synthesis, summarization, and formatting based on a specific 'task_description' provided by the LLM itself.\n  - Arguments:\n    - `task_description` (string, required): A natural language description of the internal task to be executed (e.g., 'describe the table in a business context', 'format final output'). The LLM infers this from the workflow plan.\n    - `source_data` (list[string], required): A list of keys (e.g., 'result_of_phase_1') identifying which data from the workflow history is relevant for this task. This is critical for providing the correct context.\n    - `synthesized_answer` (string, optional): The final, synthesized natural language answer, provided directly by the planner when it can confidently answer from history.\n- `TDA_ContextReport` (tool): The History First Shortcut. This tool MUST be used for a single-phase plan if, and only if, the user's question can be answered entirely from the existing Workflow History. It bypasses all data gathering. Do NOT use this tool if you need to gather new data.\n  - Arguments:\n    - `answer_from_context` (string, required): The final, synthesized natural language answer, provided directly by the planner when it has confidently answered the user's question from the conversation history.\n- `TDA_ComplexPromptReport` (tool): A special internal tool used to format and deliver the final, structured report for a pre-defined UI prompt. This tool MUST be called when all data gathering phases for the prompt are complete.\n--- Available Prompts ---\n--- Category: Utilities ---\n- `base_teradataQuery` (prompt): A Teradata SQL expert that effectively solves problems understanding teradata specific SQL syntax.\n  - Arguments:\n    - `query` (str, required): The problem or question that needs to be solved using Teradata SQL syntax.\n\n\nUSER PROMPT:\n\nYou are an expert strategic planning assistant. Your task is to analyze a user's request or a complex workflow goal and decompose it into a high-level, phased meta-plan. This plan will serve as a state machine executor.\n\n---\n### Critical Directives\nYou MUST follow these directives in order to create a valid and efficient plan.\n\n\n--- CONSTRAINTS ---\nYou are explicitly forbidden from using the following capabilities in your plan under any circumstances:\n- `sales_top_customers` (tool)\n- `base_query` (prompt)\n- `qlty_databaseQuality` (prompt)\n- `dba_databaseLineage` (prompt)\n- `base_tableBusinessDesc` (prompt)\n- `base_databaseBusinessDesc` (prompt)\n- `dba_databaseHealthAssessment` (prompt)\n- `dba_userActivityAnalysis` (prompt)\n- `dba_systemVoice` (prompt)\n- `dba_tableArchive` (prompt)\n- `dba_tableDropImpact` (prompt)\n- `_testMyServer` (prompt)\n\n\n\n\nCRITICAL RULE (Analytical Prompt Expansion): When you are creating a new plan to fulfill the goal of an analytical prompt (e.g., a prompt that provides a 'description' or 'summary'), the new plan MUST follow a 'gather-then-synthesize' structure. The initial phase(s) must gather the necessary data, and the final phase MUST be a call to TDA_LLMTask to analyze the gathered data and produce the final report.\n\n1.  **Analyze Goal and Context**: First, carefully read the user's `GOAL` and review the `CONTEXT` section to understand the full intent and what actions have already been taken.\n\n2.  **Check History First**: If the `Workflow History` contains enough information to fully answer the user's `GOAL`, your response **MUST be a single JSON object** for a one-phase plan. This plan **MUST** call the `TDA_ContextReport` tool. You **MUST** write the complete, final answer text inside the `answer_from_context` argument within that tool call. **You are acting as a planner; DO NOT use the `FINAL_ANSWER:` format.**\n\n3.  **Default to Data Gathering**: If the history is insufficient, you **MUST** create a new plan to gather the necessary data using the available tools. Your primary objective is to answer the user's `GOAL` using data from these tools.\n\n2.  **Identify Conversational Turns**: If the user's `GOAL` is purely conversational (e.g., a greeting like \"hello\") and does not require any data or action, your response **MUST be a single JSON object**: `{\"plan_type\": \"conversational\", \"response\": \"I'm doing well, thank you for asking! How can I help you with your Teradata database system today?\"}`.\n\n3.  **Handle Context and Parameters Correctly**:\n    * **Prioritize the Goal**: You **MUST** prioritize entities from the user's current `GOAL` over conflicting information in the `Workflow History`. The history is for supplementing missing information, not for overriding the current request.\n    * **Extract Parameters**: You **MUST** meticulously scan the `GOAL` for entities that correspond to tool arguments (e.g., table names) and populate the `\"arguments\"` block in your plan phase with these key-value pairs.\n\n4.  **Follow the Plan Architecture**:\n    * Your plan **MUST** follow a strict \"data-gathering first, synthesis last\" architecture.\n    * **CRITICAL RULE (Final Reporting):** After all data gathering and synthesis is complete, your plan **MUST** conclude with a final phase that calls the `TDA_ComplexPromptReport` tool. You **MUST NOT** provide arguments for this tool; its purpose is to trigger the final, structured summarization.\n    * **CRITICAL RULE (Simple Synthesis Efficiency):** If the **only** remaining task after gathering data is a simple synthesis (e.g., counting items, listing names from results, summarizing findings, assessing quality), you **MUST** proceed directly to the final reporting phase by calling the `TDA_ComplexPromptReport` tool. Do **NOT** create an intermediate `TDA_LLMTask` phase for these simple operations.\n    * **CRITICAL RULE (SQL Consolidation):** You MUST NOT create a plan where a `SQL` phase is followed by another `SQL` phase. All related analysis and synthesis MUST be consolidated into a single `SQL` phase to ensure efficiency.\n    * **CRITICAL STRATEGY (Component Iteration):** If the GOAL requires applying one or more tools to every component of a single entity (e.g., checking the quality of \"every column\" in a table), your plan MUST be structured to iterate over those components. The first phase MUST retrieve the list of components (e.g., using `base_columnDescription`). All subsequent analytical phases that operate on these components MUST be defined with `\"type\": \"loop\"` and a corresponding `\"loop_over\"` key.\n    * **CRITICAL RULE (Loop Argument Referencing):** When a phase has `\"type\": \"loop\"`, to use a value from the item being iterated over, you **MUST** use a specific JSON object as the argument's value. This object MUST have two keys: `\"source\": \"loop_item\"` and `\"key\": \"...\"`, where the key is the name of the field from the loop item's data (e.g., `\"TableName\"`).\n\n5.  **Optimize for Efficiency**:\n    * **General Principle**: Your plan **MUST** be as efficient as possible. You should always try to combine multiple logical steps into a single phase if one tool can perform the combined operation.\n    * **CRITICAL STRATEGY (Query Pushdown Efficiency)**: Always prefer a single action that filters data at the source over multiple steps that retrieve unfiltered data and then filter it.\n        * **HIGHLY PREFERRED:** Use a tool that accepts a filter (e.g., a `sql` parameter with a `WHERE` clause) to request *only the specific data you need*.\n        * **AVOID IF POSSIBLE:** Do not use a general-purpose \"list\" tool and then follow it with a second phase to find a specific item.\n        * **FILTERING RULE:** If you must use a general-purpose 'list' tool to find a specific item before acting on it, you **MUST** construct a three-phase plan:\n            1.  **Phase 1 (List):** Call the appropriate 'list' tool (e.g., `base_databaseList`).\n            2.  **Phase 2 (Filter):** Call the specialized `TDA_LLMFilter` tool. The goal of this phase is *only* to find and extract the specific item's name from the results of Phase 1. You MUST pass the goal to the `goal` argument and the results of the previous phase to the `data_to_filter` argument.\n            3.  **Phase 3 (Act):** Call the final tool (e.g., `base_tableList`), using the single, extracted item name from Phase 2 as its argument.\n            This three-step `List -> Filter -> Act` pattern is mandatory for these scenarios.\n    \n    **CRITICAL STRATEGY (SQL Consolidation):** Before creating a multi-step plan, first consider if the user's entire request can be fulfilled with a single, consolidated SQL query. If the goal involves a sequence of filtering, joining, or looking up data (e.g., \"find all tables in a database that contains X\"), you **MUST** favor using one of the following capabilities to write a single statement that performs the entire operation: `base_teradataQuery` (prompt), `base_readQuery` (tool). Avoid creating multiple `base_...List` steps if a single query would be more efficient.\n\n6.  **Maintain Simplicity and Focus**:\n    * If the `GOAL` can be answered with a single tool call, your plan **MUST** consist of only that single phase. Do not add unnecessary synthesis phases for simple data retrieval.\n    * Every phase **MUST** correspond to a concrete, executable action. Do **NOT** create phases for simple verification or acknowledgement.\n\n7.  **Adhere to Structural Rules**:\n    * **CRITICAL RULE (Plan Flattening)**: Your plan **MUST ALWAYS** be a flat, sequential list of phases. You **MUST NOT** create nested structures. Decompose tasks with nested logic into multiple, sequential looping phases.\n    * **CRITICAL RULE (Capability Type Enforcement)**: Your selection **MUST** strictly adhere to the capability type. You are **forbidden** from placing a `(prompt)` in the `\"relevant_tools\"` list or a `(tool)` in the `\"executable_prompt\"` field.\n\n8.  **Ensure Stability**:\n    * **CRITICAL RULE (Recursion Prevention)**: Review the `Current Execution Depth`. You **MUST NOT** create a plan that calls an `executable_prompt` if the depth is approaching the maximum of 5. If you are already inside an `Active Prompt`, you **MUST NOT** create a plan that calls that same prompt again.\n\n---\n### EXAMPLE (Looping with Canonical Format)\n- **User Goal**: \"Give me the DDLs of all tables in the 'fitness_db' database.\"\n- **Correct Plan**:\n  ```json\n  [\n    {\n      \"phase\": 1,\n      \"goal\": \"Get a list of all tables in the 'fitness_db' database.\",\n      \"relevant_tools\": [\"base_tableList\"],\n      \"arguments\": {\"database_name\": \"fitness_db\"}\n    },\n    {\n      \"phase\": 2,\n      \"goal\": \"Loop through the list of tables and retrieve the DDL for each one.\",\n      \"type\": \"loop\",\n      \"loop_over\": \"result_of_phase_1\",\n      \"relevant_tools\": [\"base_tableDDL\"],\n      \"arguments\": {\n        \"database_name\": \"fitness_db\",\n        \"table_name\": {\n          \"source\": \"loop_item\",\n          \"key\": \"TableName\"\n        }\n      }\n    },\n    {\n      \"phase\": 3,\n      \"goal\": \"Generate the final report based on the data gathered.\",\n      \"relevant_tools\": [\"TDA_FinalReport\"],\n      \"arguments\": {}\n    }\n  ]\n  ```\n\n---\n### Plan JSON Structure\nYour output **MUST** be a single, valid JSON array of phase objects. Each object must follow this structure:\n\n-   `\"phase\"`: An integer, starting from 1.\n-   `\"goal\"`: A concise string describing what this phase will accomplish. You MUST embed any relevant parameters from the user's goal directly into this string.\n-   `\"type\"`: (Optional) Use `\"loop\"` if the phase needs to iterate over the results of a previous phase.\n-   `\"loop_over\"`: (Required if `type` is `\"loop\"`) A string identifying the source of items to loop over (e.g., `\"result_of_phase_1\"`).\n-   `\"relevant_tools\"`: A JSON array containing the single string name of the `(tool)` to be used in this phase.\n-   `\"executable_prompt\"`: A string name of the `(prompt)` to be used in this phase.\n-   `\"arguments\"`: (Optional) A JSON object of key-value pairs for the selected capability. You can use placeholders like `\"result_of_phase_1\"` to pass data between phases.\n\n---\n### Context for this Plan\n-   Overall Goal: `# Name:  Database data quality assessment\n\n# Description: \nYou are a Teradata User who is a data quality expert focused on tables and their use for analytics.\n\n# Process \n- You will work through all the phases in order\n- You will complete a phase and pass the outcomes to the subsequent phase\n- You will be assessing the fitness_db database and all the tables in it\n\n## Phase 1 - get database tables\n- Get a list of tables in the fitness_db database using the td_base_tableList tool\n- Create a list of database_name.table_name for the next phase\n\n## Phase 2 - collect table information\nCycle through the list of tables, for each table do the following steps in order:\n- Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.\n- Step 2 - using the qlty_columnSummary tool, gather column statistics for the table\n- Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table \n- Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table\n\n## Phase 3 - Present results as a dashboard\n- At the beginning of the dashboard identify the database\n- For each table present the results from phase 2 together\n- Ensure that each table is presented the same way\n- Use color to highlight points of interest\n\n# Communication guidelines\n- Be concise but informative in your explanation\n- Clearly indicate which phase you are currently in and only focus on the activities of the current phase\n- Summarize the outcome of the phase before moving to the next phase\n\n# Final output\nA professional data quality dashboard that is easily navigable.\n`\n-   Explicit Parameters: \n--- EXPLICIT PARAMETERS ---\nThe following parameters were explicitly provided for this prompt execution:\n- database_name: \"fitness_db\"\n\n-   User's Original Input: `Executing prompt...`\n-   Workflow History: `{\n  \"workflow_history\": []\n}`\n-   Execution Depth: This is recursive call number `0`. Avoid creating identical plans.\n\n- Active Prompt: You are currently executing the 'qlty_databaseQuality' prompt. Do not call it again.\n\nYour response MUST be a single, valid JSON list of phase objects. Do NOT add any extra text, conversation, or markdown.\n"
    },
    {
      "role": "model",
      "content": "```json\n[\n  {\n    \"phase\": 1,\n    \"goal\": \"Get a list of tables in the fitness_db database.\",\n    \"relevant_tools\": [\"base_tableList\"],\n    \"arguments\": {\"database_name\": \"fitness_db\"}\n  },\n  {\n    \"phase\": 2,\n    \"goal\": \"Loop through the list of tables and retrieve the DDL, column summary, univariate statistics, and rows with missing values for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"base_tableDDL\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 3,\n    \"goal\": \"Loop through the list of tables and retrieve column summary for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_columnSummary\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 4,\n    \"goal\": \"Loop through the list of tables and retrieve univariate statistics for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_univariateStatistics\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 5,\n    \"goal\": \"Loop through the list of tables and retrieve rows with missing values for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_rowsWithMissingValues\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 6,\n    \"goal\": \"Generate the final report based on the data gathered.\",\n    \"relevant_tools\": [\"TDA_ComplexPromptReport\"],\n    \"arguments\": {}\n  }\n]\n```"
    }
  ]
}

--- Current User Prompt (with System Prompt) ---
SYSTEM PROMPT:
You are a JSON-only responding assistant.

USER PROMPT:
Analyze the tool to determine if its `column_name` argument is for 'numeric', 'character', or 'any' type.
Tool: `qlty_univariateStatistics`
Description: ""
Hint: This tool is for quantitative analysis and requires a 'numeric' data type for `column_name`.
Respond with a single JSON object: {"dataType": "numeric" | "character" | "any"}

2025-10-05 12:10:01,682 - --- FULL CONTEXT (Session: e230458d-0eed-4ae6-ab87-1960e6864b57) ---
--- REASON FOR CALL ---
Determining tool constraints for column iteration.

--- History (History Disabled for LLM Call: False) ---
{
  "chat_history": [
    {
      "role": "user",
      "content": "You are a helpful assistant."
    },
    {
      "role": "model",
      "content": "Understood."
    },
    {
      "role": "user",
      "content": "\nYou are an expert strategic planning assistant. Your task is to analyze a user's request or a complex workflow goal and decompose it into a high-level, phased meta-plan. This plan will serve as a state machine executor.\n\n---\n### Critical Directives\nYou MUST follow these directives in order to create a valid and efficient plan.\n\n\n--- CONSTRAINTS ---\nYou are explicitly forbidden from using the following capabilities in your plan under any circumstances:\n- `sales_top_customers` (tool)\n- `base_query` (prompt)\n- `qlty_databaseQuality` (prompt)\n- `dba_databaseLineage` (prompt)\n- `base_tableBusinessDesc` (prompt)\n- `base_databaseBusinessDesc` (prompt)\n- `dba_databaseHealthAssessment` (prompt)\n- `dba_userActivityAnalysis` (prompt)\n- `dba_systemVoice` (prompt)\n- `dba_tableArchive` (prompt)\n- `dba_tableDropImpact` (prompt)\n- `_testMyServer` (prompt)\n\n\n\n\nCRITICAL RULE (Analytical Prompt Expansion): When you are creating a new plan to fulfill the goal of an analytical prompt (e.g., a prompt that provides a 'description' or 'summary'), the new plan MUST follow a 'gather-then-synthesize' structure. The initial phase(s) must gather the necessary data, and the final phase MUST be a call to TDA_LLMTask to analyze the gathered data and produce the final report.\n\n1.  **Analyze Goal and Context**: First, carefully read the user's `GOAL` and review the `CONTEXT` section to understand the full intent and what actions have already been taken.\n\n2.  **Check History First**: If the `Workflow History` contains enough information to fully answer the user's `GOAL`, your response **MUST be a single JSON object** for a one-phase plan. This plan **MUST** call the `TDA_ContextReport` tool. You **MUST** write the complete, final answer text inside the `answer_from_context` argument within that tool call. **You are acting as a planner; DO NOT use the `FINAL_ANSWER:` format.**\n\n3.  **Default to Data Gathering**: If the history is insufficient, you **MUST** create a new plan to gather the necessary data using the available tools. Your primary objective is to answer the user's `GOAL` using data from these tools.\n\n2.  **Identify Conversational Turns**: If the user's `GOAL` is purely conversational (e.g., a greeting like \"hello\") and does not require any data or action, your response **MUST be a single JSON object**: `{\"plan_type\": \"conversational\", \"response\": \"I'm doing well, thank you for asking! How can I help you with your Teradata database system today?\"}`.\n\n3.  **Handle Context and Parameters Correctly**:\n    * **Prioritize the Goal**: You **MUST** prioritize entities from the user's current `GOAL` over conflicting information in the `Workflow History`. The history is for supplementing missing information, not for overriding the current request.\n    * **Extract Parameters**: You **MUST** meticulously scan the `GOAL` for entities that correspond to tool arguments (e.g., table names) and populate the `\"arguments\"` block in your plan phase with these key-value pairs.\n\n4.  **Follow the Plan Architecture**:\n    * Your plan **MUST** follow a strict \"data-gathering first, synthesis last\" architecture.\n    * **CRITICAL RULE (Final Reporting):** After all data gathering and synthesis is complete, your plan **MUST** conclude with a final phase that calls the `TDA_ComplexPromptReport` tool. You **MUST NOT** provide arguments for this tool; its purpose is to trigger the final, structured summarization.\n    * **CRITICAL RULE (Simple Synthesis Efficiency):** If the **only** remaining task after gathering data is a simple synthesis (e.g., counting items, listing names from results, summarizing findings, assessing quality), you **MUST** proceed directly to the final reporting phase by calling the `TDA_ComplexPromptReport` tool. Do **NOT** create an intermediate `TDA_LLMTask` phase for these simple operations.\n    * **CRITICAL RULE (SQL Consolidation):** You MUST NOT create a plan where a `SQL` phase is followed by another `SQL` phase. All related analysis and synthesis MUST be consolidated into a single `SQL` phase to ensure efficiency.\n    * **CRITICAL STRATEGY (Component Iteration):** If the GOAL requires applying one or more tools to every component of a single entity (e.g., checking the quality of \"every column\" in a table), your plan MUST be structured to iterate over those components. The first phase MUST retrieve the list of components (e.g., using `base_columnDescription`). All subsequent analytical phases that operate on these components MUST be defined with `\"type\": \"loop\"` and a corresponding `\"loop_over\"` key.\n    * **CRITICAL RULE (Loop Argument Referencing):** When a phase has `\"type\": \"loop\"`, to use a value from the item being iterated over, you **MUST** use a specific JSON object as the argument's value. This object MUST have two keys: `\"source\": \"loop_item\"` and `\"key\": \"...\"`, where the key is the name of the field from the loop item's data (e.g., `\"TableName\"`).\n\n5.  **Optimize for Efficiency**:\n    * **General Principle**: Your plan **MUST** be as efficient as possible. You should always try to combine multiple logical steps into a single phase if one tool can perform the combined operation.\n    * **CRITICAL STRATEGY (Query Pushdown Efficiency)**: Always prefer a single action that filters data at the source over multiple steps that retrieve unfiltered data and then filter it.\n        * **HIGHLY PREFERRED:** Use a tool that accepts a filter (e.g., a `sql` parameter with a `WHERE` clause) to request *only the specific data you need*.\n        * **AVOID IF POSSIBLE:** Do not use a general-purpose \"list\" tool and then follow it with a second phase to find a specific item.\n        * **FILTERING RULE:** If you must use a general-purpose 'list' tool to find a specific item before acting on it, you **MUST** construct a three-phase plan:\n            1.  **Phase 1 (List):** Call the appropriate 'list' tool (e.g., `base_databaseList`).\n            2.  **Phase 2 (Filter):** Call the specialized `TDA_LLMFilter` tool. The goal of this phase is *only* to find and extract the specific item's name from the results of Phase 1. You MUST pass the goal to the `goal` argument and the results of the previous phase to the `data_to_filter` argument.\n            3.  **Phase 3 (Act):** Call the final tool (e.g., `base_tableList`), using the single, extracted item name from Phase 2 as its argument.\n            This three-step `List -> Filter -> Act` pattern is mandatory for these scenarios.\n    \n    **CRITICAL STRATEGY (SQL Consolidation):** Before creating a multi-step plan, first consider if the user's entire request can be fulfilled with a single, consolidated SQL query. If the goal involves a sequence of filtering, joining, or looking up data (e.g., \"find all tables in a database that contains X\"), you **MUST** favor using one of the following capabilities to write a single statement that performs the entire operation: `base_teradataQuery` (prompt), `base_readQuery` (tool). Avoid creating multiple `base_...List` steps if a single query would be more efficient.\n\n6.  **Maintain Simplicity and Focus**:\n    * If the `GOAL` can be answered with a single tool call, your plan **MUST** consist of only that single phase. Do not add unnecessary synthesis phases for simple data retrieval.\n    * Every phase **MUST** correspond to a concrete, executable action. Do **NOT** create phases for simple verification or acknowledgement.\n\n7.  **Adhere to Structural Rules**:\n    * **CRITICAL RULE (Plan Flattening)**: Your plan **MUST ALWAYS** be a flat, sequential list of phases. You **MUST NOT** create nested structures. Decompose tasks with nested logic into multiple, sequential looping phases.\n    * **CRITICAL RULE (Capability Type Enforcement)**: Your selection **MUST** strictly adhere to the capability type. You are **forbidden** from placing a `(prompt)` in the `\"relevant_tools\"` list or a `(tool)` in the `\"executable_prompt\"` field.\n\n8.  **Ensure Stability**:\n    * **CRITICAL RULE (Recursion Prevention)**: Review the `Current Execution Depth`. You **MUST NOT** create a plan that calls an `executable_prompt` if the depth is approaching the maximum of 5. If you are already inside an `Active Prompt`, you **MUST NOT** create a plan that calls that same prompt again.\n\n---\n### EXAMPLE (Looping with Canonical Format)\n- **User Goal**: \"Give me the DDLs of all tables in the 'fitness_db' database.\"\n- **Correct Plan**:\n  ```json\n  [\n    {\n      \"phase\": 1,\n      \"goal\": \"Get a list of all tables in the 'fitness_db' database.\",\n      \"relevant_tools\": [\"base_tableList\"],\n      \"arguments\": {\"database_name\": \"fitness_db\"}\n    },\n    {\n      \"phase\": 2,\n      \"goal\": \"Loop through the list of tables and retrieve the DDL for each one.\",\n      \"type\": \"loop\",\n      \"loop_over\": \"result_of_phase_1\",\n      \"relevant_tools\": [\"base_tableDDL\"],\n      \"arguments\": {\n        \"database_name\": \"fitness_db\",\n        \"table_name\": {\n          \"source\": \"loop_item\",\n          \"key\": \"TableName\"\n        }\n      }\n    },\n    {\n      \"phase\": 3,\n      \"goal\": \"Generate the final report based on the data gathered.\",\n      \"relevant_tools\": [\"TDA_FinalReport\"],\n      \"arguments\": {}\n    }\n  ]\n  ```\n\n---\n### Plan JSON Structure\nYour output **MUST** be a single, valid JSON array of phase objects. Each object must follow this structure:\n\n-   `\"phase\"`: An integer, starting from 1.\n-   `\"goal\"`: A concise string describing what this phase will accomplish. You MUST embed any relevant parameters from the user's goal directly into this string.\n-   `\"type\"`: (Optional) Use `\"loop\"` if the phase needs to iterate over the results of a previous phase.\n-   `\"loop_over\"`: (Required if `type` is `\"loop\"`) A string identifying the source of items to loop over (e.g., `\"result_of_phase_1\"`).\n-   `\"relevant_tools\"`: A JSON array containing the single string name of the `(tool)` to be used in this phase.\n-   `\"executable_prompt\"`: A string name of the `(prompt)` to be used in this phase.\n-   `\"arguments\"`: (Optional) A JSON object of key-value pairs for the selected capability. You can use placeholders like `\"result_of_phase_1\"` to pass data between phases.\n\n---\n### Context for this Plan\n-   Overall Goal: `# Name:  Database data quality assessment\n\n# Description: \nYou are a Teradata User who is a data quality expert focused on tables and their use for analytics.\n\n# Process \n- You will work through all the phases in order\n- You will complete a phase and pass the outcomes to the subsequent phase\n- You will be assessing the fitness_db database and all the tables in it\n\n## Phase 1 - get database tables\n- Get a list of tables in the fitness_db database using the td_base_tableList tool\n- Create a list of database_name.table_name for the next phase\n\n## Phase 2 - collect table information\nCycle through the list of tables, for each table do the following steps in order:\n- Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.\n- Step 2 - using the qlty_columnSummary tool, gather column statistics for the table\n- Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table \n- Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table\n\n## Phase 3 - Present results as a dashboard\n- At the beginning of the dashboard identify the database\n- For each table present the results from phase 2 together\n- Ensure that each table is presented the same way\n- Use color to highlight points of interest\n\n# Communication guidelines\n- Be concise but informative in your explanation\n- Clearly indicate which phase you are currently in and only focus on the activities of the current phase\n- Summarize the outcome of the phase before moving to the next phase\n\n# Final output\nA professional data quality dashboard that is easily navigable.\n`\n-   Explicit Parameters: \n--- EXPLICIT PARAMETERS ---\nThe following parameters were explicitly provided for this prompt execution:\n- database_name: \"fitness_db\"\n\n-   User's Original Input: `Executing prompt...`\n-   Workflow History: `{\n  \"workflow_history\": []\n}`\n-   Execution Depth: This is recursive call number `0`. Avoid creating identical plans.\n\n- Active Prompt: You are currently executing the 'qlty_databaseQuality' prompt. Do not call it again.\n\nYour response MUST be a single, valid JSON list of phase objects. Do NOT add any extra text, conversation, or markdown.\n"
    },
    {
      "role": "model",
      "content": "```json\n[\n  {\n    \"phase\": 1,\n    \"goal\": \"Get a list of tables in the fitness_db database.\",\n    \"relevant_tools\": [\"base_tableList\"],\n    \"arguments\": {\"database_name\": \"fitness_db\"}\n  },\n  {\n    \"phase\": 2,\n    \"goal\": \"Loop through the list of tables and retrieve the DDL, column summary, univariate statistics, and rows with missing values for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"base_tableDDL\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 3,\n    \"goal\": \"Loop through the list of tables and retrieve column summary for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_columnSummary\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 4,\n    \"goal\": \"Loop through the list of tables and retrieve univariate statistics for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_univariateStatistics\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 5,\n    \"goal\": \"Loop through the list of tables and retrieve rows with missing values for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_rowsWithMissingValues\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 6,\n    \"goal\": \"Generate the final report based on the data gathered.\",\n    \"relevant_tools\": [\"TDA_ComplexPromptReport\"],\n    \"arguments\": {}\n  }\n]\n```"
    },
    {
      "role": "user",
      "content": "SYSTEM PROMPT:\nYou are a JSON-only responding assistant.\n\nUSER PROMPT:\nAnalyze the tool to determine if its `column_name` argument is for 'numeric', 'character', or 'any' type.\nTool: `qlty_univariateStatistics`\nDescription: \"\"\nHint: This tool is for quantitative analysis and requires a 'numeric' data type for `column_name`.\nRespond with a single JSON object: {\"dataType\": \"numeric\" | \"character\" | \"any\"}"
    },
    {
      "role": "model",
      "content": "```json\n{\"dataType\": \"numeric\"}\n```"
    }
  ]
}

--- Current User Prompt (with System Prompt) ---
SYSTEM PROMPT:
You are a JSON-only responding assistant.

USER PROMPT:
Analyze the tool to determine if its `column_name` argument is for 'numeric', 'character', or 'any' type.
Tool: `qlty_rowsWithMissingValues`
Description: ""
Hint: 
Respond with a single JSON object: {"dataType": "numeric" | "character" | "any"}

2025-10-05 12:10:18,859 - --- FULL CONTEXT (Session: e230458d-0eed-4ae6-ab87-1960e6864b57) ---
--- REASON FOR CALL ---
Client-Side Tool Call: TDA_ComplexPromptReport
Goal: # Name:  Database data quality assessment

# Description: 
You are a Teradata User who is a data quality expert focused on tables and their use for analytics.

# Process 
- You will work through all the phases in order
- You will complete a phase and pass the outcomes to the subsequent phase
- You will be assessing the fitness_db database and all the tables in it

## Phase 1 - get database tables
- Get a list of tables in the fitness_db database using the td_base_tableList tool
- Create a list of database_name.table_name for the next phase

## Phase 2 - collect table information
Cycle through the list of tables, for each table do the following steps in order:
- Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.
- Step 2 - using the qlty_columnSummary tool, gather column statistics for the table
- Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table 
- Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table

## Phase 3 - Present results as a dashboard
- At the beginning of the dashboard identify the database
- For each table present the results from phase 2 together
- Ensure that each table is presented the same way
- Use color to highlight points of interest

# Communication guidelines
- Be concise but informative in your explanation
- Clearly indicate which phase you are currently in and only focus on the activities of the current phase
- Summarize the outcome of the phase before moving to the next phase

# Final output
A professional data quality dashboard that is easily navigable.


--- History (History Disabled for LLM Call: False) ---
{
  "chat_history": [
    {
      "role": "user",
      "content": "You are a helpful assistant."
    },
    {
      "role": "model",
      "content": "Understood."
    },
    {
      "role": "user",
      "content": "\nYou are an expert strategic planning assistant. Your task is to analyze a user's request or a complex workflow goal and decompose it into a high-level, phased meta-plan. This plan will serve as a state machine executor.\n\n---\n### Critical Directives\nYou MUST follow these directives in order to create a valid and efficient plan.\n\n\n--- CONSTRAINTS ---\nYou are explicitly forbidden from using the following capabilities in your plan under any circumstances:\n- `sales_top_customers` (tool)\n- `base_query` (prompt)\n- `qlty_databaseQuality` (prompt)\n- `dba_databaseLineage` (prompt)\n- `base_tableBusinessDesc` (prompt)\n- `base_databaseBusinessDesc` (prompt)\n- `dba_databaseHealthAssessment` (prompt)\n- `dba_userActivityAnalysis` (prompt)\n- `dba_systemVoice` (prompt)\n- `dba_tableArchive` (prompt)\n- `dba_tableDropImpact` (prompt)\n- `_testMyServer` (prompt)\n\n\n\n\nCRITICAL RULE (Analytical Prompt Expansion): When you are creating a new plan to fulfill the goal of an analytical prompt (e.g., a prompt that provides a 'description' or 'summary'), the new plan MUST follow a 'gather-then-synthesize' structure. The initial phase(s) must gather the necessary data, and the final phase MUST be a call to TDA_LLMTask to analyze the gathered data and produce the final report.\n\n1.  **Analyze Goal and Context**: First, carefully read the user's `GOAL` and review the `CONTEXT` section to understand the full intent and what actions have already been taken.\n\n2.  **Check History First**: If the `Workflow History` contains enough information to fully answer the user's `GOAL`, your response **MUST be a single JSON object** for a one-phase plan. This plan **MUST** call the `TDA_ContextReport` tool. You **MUST** write the complete, final answer text inside the `answer_from_context` argument within that tool call. **You are acting as a planner; DO NOT use the `FINAL_ANSWER:` format.**\n\n3.  **Default to Data Gathering**: If the history is insufficient, you **MUST** create a new plan to gather the necessary data using the available tools. Your primary objective is to answer the user's `GOAL` using data from these tools.\n\n2.  **Identify Conversational Turns**: If the user's `GOAL` is purely conversational (e.g., a greeting like \"hello\") and does not require any data or action, your response **MUST be a single JSON object**: `{\"plan_type\": \"conversational\", \"response\": \"I'm doing well, thank you for asking! How can I help you with your Teradata database system today?\"}`.\n\n3.  **Handle Context and Parameters Correctly**:\n    * **Prioritize the Goal**: You **MUST** prioritize entities from the user's current `GOAL` over conflicting information in the `Workflow History`. The history is for supplementing missing information, not for overriding the current request.\n    * **Extract Parameters**: You **MUST** meticulously scan the `GOAL` for entities that correspond to tool arguments (e.g., table names) and populate the `\"arguments\"` block in your plan phase with these key-value pairs.\n\n4.  **Follow the Plan Architecture**:\n    * Your plan **MUST** follow a strict \"data-gathering first, synthesis last\" architecture.\n    * **CRITICAL RULE (Final Reporting):** After all data gathering and synthesis is complete, your plan **MUST** conclude with a final phase that calls the `TDA_ComplexPromptReport` tool. You **MUST NOT** provide arguments for this tool; its purpose is to trigger the final, structured summarization.\n    * **CRITICAL RULE (Simple Synthesis Efficiency):** If the **only** remaining task after gathering data is a simple synthesis (e.g., counting items, listing names from results, summarizing findings, assessing quality), you **MUST** proceed directly to the final reporting phase by calling the `TDA_ComplexPromptReport` tool. Do **NOT** create an intermediate `TDA_LLMTask` phase for these simple operations.\n    * **CRITICAL RULE (SQL Consolidation):** You MUST NOT create a plan where a `SQL` phase is followed by another `SQL` phase. All related analysis and synthesis MUST be consolidated into a single `SQL` phase to ensure efficiency.\n    * **CRITICAL STRATEGY (Component Iteration):** If the GOAL requires applying one or more tools to every component of a single entity (e.g., checking the quality of \"every column\" in a table), your plan MUST be structured to iterate over those components. The first phase MUST retrieve the list of components (e.g., using `base_columnDescription`). All subsequent analytical phases that operate on these components MUST be defined with `\"type\": \"loop\"` and a corresponding `\"loop_over\"` key.\n    * **CRITICAL RULE (Loop Argument Referencing):** When a phase has `\"type\": \"loop\"`, to use a value from the item being iterated over, you **MUST** use a specific JSON object as the argument's value. This object MUST have two keys: `\"source\": \"loop_item\"` and `\"key\": \"...\"`, where the key is the name of the field from the loop item's data (e.g., `\"TableName\"`).\n\n5.  **Optimize for Efficiency**:\n    * **General Principle**: Your plan **MUST** be as efficient as possible. You should always try to combine multiple logical steps into a single phase if one tool can perform the combined operation.\n    * **CRITICAL STRATEGY (Query Pushdown Efficiency)**: Always prefer a single action that filters data at the source over multiple steps that retrieve unfiltered data and then filter it.\n        * **HIGHLY PREFERRED:** Use a tool that accepts a filter (e.g., a `sql` parameter with a `WHERE` clause) to request *only the specific data you need*.\n        * **AVOID IF POSSIBLE:** Do not use a general-purpose \"list\" tool and then follow it with a second phase to find a specific item.\n        * **FILTERING RULE:** If you must use a general-purpose 'list' tool to find a specific item before acting on it, you **MUST** construct a three-phase plan:\n            1.  **Phase 1 (List):** Call the appropriate 'list' tool (e.g., `base_databaseList`).\n            2.  **Phase 2 (Filter):** Call the specialized `TDA_LLMFilter` tool. The goal of this phase is *only* to find and extract the specific item's name from the results of Phase 1. You MUST pass the goal to the `goal` argument and the results of the previous phase to the `data_to_filter` argument.\n            3.  **Phase 3 (Act):** Call the final tool (e.g., `base_tableList`), using the single, extracted item name from Phase 2 as its argument.\n            This three-step `List -> Filter -> Act` pattern is mandatory for these scenarios.\n    \n    **CRITICAL STRATEGY (SQL Consolidation):** Before creating a multi-step plan, first consider if the user's entire request can be fulfilled with a single, consolidated SQL query. If the goal involves a sequence of filtering, joining, or looking up data (e.g., \"find all tables in a database that contains X\"), you **MUST** favor using one of the following capabilities to write a single statement that performs the entire operation: `base_teradataQuery` (prompt), `base_readQuery` (tool). Avoid creating multiple `base_...List` steps if a single query would be more efficient.\n\n6.  **Maintain Simplicity and Focus**:\n    * If the `GOAL` can be answered with a single tool call, your plan **MUST** consist of only that single phase. Do not add unnecessary synthesis phases for simple data retrieval.\n    * Every phase **MUST** correspond to a concrete, executable action. Do **NOT** create phases for simple verification or acknowledgement.\n\n7.  **Adhere to Structural Rules**:\n    * **CRITICAL RULE (Plan Flattening)**: Your plan **MUST ALWAYS** be a flat, sequential list of phases. You **MUST NOT** create nested structures. Decompose tasks with nested logic into multiple, sequential looping phases.\n    * **CRITICAL RULE (Capability Type Enforcement)**: Your selection **MUST** strictly adhere to the capability type. You are **forbidden** from placing a `(prompt)` in the `\"relevant_tools\"` list or a `(tool)` in the `\"executable_prompt\"` field.\n\n8.  **Ensure Stability**:\n    * **CRITICAL RULE (Recursion Prevention)**: Review the `Current Execution Depth`. You **MUST NOT** create a plan that calls an `executable_prompt` if the depth is approaching the maximum of 5. If you are already inside an `Active Prompt`, you **MUST NOT** create a plan that calls that same prompt again.\n\n---\n### EXAMPLE (Looping with Canonical Format)\n- **User Goal**: \"Give me the DDLs of all tables in the 'fitness_db' database.\"\n- **Correct Plan**:\n  ```json\n  [\n    {\n      \"phase\": 1,\n      \"goal\": \"Get a list of all tables in the 'fitness_db' database.\",\n      \"relevant_tools\": [\"base_tableList\"],\n      \"arguments\": {\"database_name\": \"fitness_db\"}\n    },\n    {\n      \"phase\": 2,\n      \"goal\": \"Loop through the list of tables and retrieve the DDL for each one.\",\n      \"type\": \"loop\",\n      \"loop_over\": \"result_of_phase_1\",\n      \"relevant_tools\": [\"base_tableDDL\"],\n      \"arguments\": {\n        \"database_name\": \"fitness_db\",\n        \"table_name\": {\n          \"source\": \"loop_item\",\n          \"key\": \"TableName\"\n        }\n      }\n    },\n    {\n      \"phase\": 3,\n      \"goal\": \"Generate the final report based on the data gathered.\",\n      \"relevant_tools\": [\"TDA_FinalReport\"],\n      \"arguments\": {}\n    }\n  ]\n  ```\n\n---\n### Plan JSON Structure\nYour output **MUST** be a single, valid JSON array of phase objects. Each object must follow this structure:\n\n-   `\"phase\"`: An integer, starting from 1.\n-   `\"goal\"`: A concise string describing what this phase will accomplish. You MUST embed any relevant parameters from the user's goal directly into this string.\n-   `\"type\"`: (Optional) Use `\"loop\"` if the phase needs to iterate over the results of a previous phase.\n-   `\"loop_over\"`: (Required if `type` is `\"loop\"`) A string identifying the source of items to loop over (e.g., `\"result_of_phase_1\"`).\n-   `\"relevant_tools\"`: A JSON array containing the single string name of the `(tool)` to be used in this phase.\n-   `\"executable_prompt\"`: A string name of the `(prompt)` to be used in this phase.\n-   `\"arguments\"`: (Optional) A JSON object of key-value pairs for the selected capability. You can use placeholders like `\"result_of_phase_1\"` to pass data between phases.\n\n---\n### Context for this Plan\n-   Overall Goal: `# Name:  Database data quality assessment\n\n# Description: \nYou are a Teradata User who is a data quality expert focused on tables and their use for analytics.\n\n# Process \n- You will work through all the phases in order\n- You will complete a phase and pass the outcomes to the subsequent phase\n- You will be assessing the fitness_db database and all the tables in it\n\n## Phase 1 - get database tables\n- Get a list of tables in the fitness_db database using the td_base_tableList tool\n- Create a list of database_name.table_name for the next phase\n\n## Phase 2 - collect table information\nCycle through the list of tables, for each table do the following steps in order:\n- Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.\n- Step 2 - using the qlty_columnSummary tool, gather column statistics for the table\n- Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table \n- Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table\n\n## Phase 3 - Present results as a dashboard\n- At the beginning of the dashboard identify the database\n- For each table present the results from phase 2 together\n- Ensure that each table is presented the same way\n- Use color to highlight points of interest\n\n# Communication guidelines\n- Be concise but informative in your explanation\n- Clearly indicate which phase you are currently in and only focus on the activities of the current phase\n- Summarize the outcome of the phase before moving to the next phase\n\n# Final output\nA professional data quality dashboard that is easily navigable.\n`\n-   Explicit Parameters: \n--- EXPLICIT PARAMETERS ---\nThe following parameters were explicitly provided for this prompt execution:\n- database_name: \"fitness_db\"\n\n-   User's Original Input: `Executing prompt...`\n-   Workflow History: `{\n  \"workflow_history\": []\n}`\n-   Execution Depth: This is recursive call number `0`. Avoid creating identical plans.\n\n- Active Prompt: You are currently executing the 'qlty_databaseQuality' prompt. Do not call it again.\n\nYour response MUST be a single, valid JSON list of phase objects. Do NOT add any extra text, conversation, or markdown.\n"
    },
    {
      "role": "model",
      "content": "```json\n[\n  {\n    \"phase\": 1,\n    \"goal\": \"Get a list of tables in the fitness_db database.\",\n    \"relevant_tools\": [\"base_tableList\"],\n    \"arguments\": {\"database_name\": \"fitness_db\"}\n  },\n  {\n    \"phase\": 2,\n    \"goal\": \"Loop through the list of tables and retrieve the DDL, column summary, univariate statistics, and rows with missing values for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"base_tableDDL\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 3,\n    \"goal\": \"Loop through the list of tables and retrieve column summary for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_columnSummary\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 4,\n    \"goal\": \"Loop through the list of tables and retrieve univariate statistics for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_univariateStatistics\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 5,\n    \"goal\": \"Loop through the list of tables and retrieve rows with missing values for each one.\",\n    \"type\": \"loop\",\n    \"loop_over\": \"result_of_phase_1\",\n    \"relevant_tools\": [\"qlty_rowsWithMissingValues\"],\n    \"arguments\": {\n      \"database_name\": \"fitness_db\",\n      \"table_name\": {\n        \"source\": \"loop_item\",\n        \"key\": \"TableName\"\n      }\n    }\n  },\n  {\n    \"phase\": 6,\n    \"goal\": \"Generate the final report based on the data gathered.\",\n    \"relevant_tools\": [\"TDA_ComplexPromptReport\"],\n    \"arguments\": {}\n  }\n]\n```"
    },
    {
      "role": "user",
      "content": "Analyze the tool to determine if its `column_name` argument is for 'numeric', 'character', or 'any' type.\nTool: `qlty_univariateStatistics`\nDescription: \"\"\nHint: This tool is for quantitative analysis and requires a 'numeric' data type for `column_name`.\nRespond with a single JSON object: {\"dataType\": \"numeric\" | \"character\" | \"any\"}"
    },
    {
      "role": "model",
      "content": "```json\n{\"dataType\": \"numeric\"}\n```"
    },
    {
      "role": "user",
      "content": "SYSTEM PROMPT:\nYou are a JSON-only responding assistant.\n\nUSER PROMPT:\nAnalyze the tool to determine if its `column_name` argument is for 'numeric', 'character', or 'any' type.\nTool: `qlty_rowsWithMissingValues`\nDescription: \"\"\nHint: \nRespond with a single JSON object: {\"dataType\": \"numeric\" | \"character\" | \"any\"}"
    },
    {
      "role": "model",
      "content": "```json\n{\"dataType\": \"any\"}\n```"
    }
  ]
}

--- Current User Prompt (with System Prompt) ---
SYSTEM PROMPT:
You are a JSON-only reporting assistant.

USER PROMPT:
You are an expert technical writer and data analyst. Your task is to synthesize all the collected data from a completed workflow into a formal, structured report that fulfills the original prompt's goal.

--- ORIGINAL PROMPT GOAL ---
# Name:  Database data quality assessment

# Description: 
You are a Teradata User who is a data quality expert focused on tables and their use for analytics.

# Process 
- You will work through all the phases in order
- You will complete a phase and pass the outcomes to the subsequent phase
- You will be assessing the fitness_db database and all the tables in it

## Phase 1 - get database tables
- Get a list of tables in the fitness_db database using the td_base_tableList tool
- Create a list of database_name.table_name for the next phase

## Phase 2 - collect table information
Cycle through the list of tables, for each table do the following steps in order:
- Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.
- Step 2 - using the qlty_columnSummary tool, gather column statistics for the table
- Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table 
- Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table

## Phase 3 - Present results as a dashboard
- At the beginning of the dashboard identify the database
- For each table present the results from phase 2 together
- Ensure that each table is presented the same way
- Use color to highlight points of interest

# Communication guidelines
- Be concise but informative in your explanation
- Clearly indicate which phase you are currently in and only focus on the activities of the current phase
- Summarize the outcome of the phase before moving to the next phase

# Final output
A professional data quality dashboard that is easily navigable.


--- ALL COLLECTED DATA ---
{
  "original_user_input": "Executing prompt...",
  "workflow_goal_prompt": "# Name:  Database data quality assessment\n\n# Description: \nYou are a Teradata User who is a data quality expert focused on tables and their use for analytics.\n\n# Process \n- You will work through all the phases in order\n- You will complete a phase and pass the outcomes to the subsequent phase\n- You will be assessing the fitness_db database and all the tables in it\n\n## Phase 1 - get database tables\n- Get a list of tables in the fitness_db database using the td_base_tableList tool\n- Create a list of database_name.table_name for the next phase\n\n## Phase 2 - collect table information\nCycle through the list of tables, for each table do the following steps in order:\n- Step 1 - using the td_base_tableDDL tool to get the table structure, using the structure generate a business description of the table and all of the columns.\n- Step 2 - using the qlty_columnSummary tool, gather column statistics for the table\n- Step 3 - using the qlty_univariateStatistics tool to get the univariate statistics for a table \n- Step 4 - using the qlty_rowsWithMissingValues tool to get rows with missing values in a table\n\n## Phase 3 - Present results as a dashboard\n- At the beginning of the dashboard identify the database\n- For each table present the results from phase 2 together\n- Ensure that each table is presented the same way\n- Use color to highlight points of interest\n\n# Communication guidelines\n- Be concise but informative in your explanation\n- Clearly indicate which phase you are currently in and only focus on the activities of the current phase\n- Summarize the outcome of the phase before moving to the next phase\n\n# Final output\nA professional data quality dashboard that is easily navigable.\n",
  "result_of_phase_1": [
    {
      "status": "success",
      "results": [
        {
          "TableName": "Products"
        },
        {
          "TableName": "SaleDetails"
        },
        {
          "TableName": "Customers"
        },
        {
          "TableName": "ServiceTickets"
        },
        {
          "TableName": "Sales"
        }
      ],
      "metadata": {
        "tool_name": "base_tableList",
        "sql": "select TableName from dbc.TablesV tv where tv.TableKind in ('T','V', 'O', 'Q') and UPPER(tv.DatabaseName) = UPPER('fitness_db')",
        "columns": [
          {
            "name": "TableName",
            "type": "str"
          }
        ],
        "row_count": 5
      }
    }
  ],
  "result_of_phase_2": [
    {
      "status": "success",
      "results": [
        {
          "Request Text": "CREATE MULTISET TABLE fitness_db.Products ,FALLBACK ,\r     NO BEFORE JOURNAL,\r     NO AFTER JOURNAL,\r     CHECKSUM = DEFAULT,\r     DEFAULT MERGEBLOCKRATIO,\r     MAP = TD_MAP1\r     (\r      ProductID INTEGER NOT NULL,\r      ProductName VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC NOT NULL,\r      ProductType VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,\r      Brand VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,\r      Price DECIMAL(10,2) NOT NULL,\r      StockQuantity INTEGER)\rUNIQUE PRIMARY INDEX ( ProductID );",
          "TableName": "Products"
        }
      ],
      "metadata": {
        "tool_name": "base_tableDDL",
        "database": "fitness_db",
        "table": "fitness_db.Products",
        "rows": 1
      }
    },
    {
      "status": "success",
      "results": [
        {
          "Request Text": "CREATE MULTISET TABLE fitness_db.SaleDetails ,FALLBACK ,\r     NO BEFORE JOURNAL,\r     NO AFTER JOURNAL,\r     CHECKSUM = DEFAULT,\r     DEFAULT MERGEBLOCKRATIO,\r     MAP = TD_MAP1\r     (\r      SaleDetailID INTEGER NOT NULL,\r      SaleID INTEGER NOT NULL,\r      ProductID INTEGER NOT NULL,\r      Quantity INTEGER NOT NULL,\r      UnitPrice DECIMAL(10,2) NOT NULL, \rFOREIGN KEY ( SaleID ) REFERENCES fitness_db.Sales ( SaleID ),\rFOREIGN KEY ( ProductID ) REFERENCES fitness_db.Products ( ProductID ))\rUNIQUE PRIMARY INDEX ( SaleDetailID );",
          "TableName": "SaleDetails"
        }
      ],
      "metadata": {
        "tool_name": "base_tableDDL",
        "database": "fitness_db",
        "table": "fitness_db.SaleDetails",
        "rows": 1
      }
    },
    {
      "status": "success",
      "results": [
        {
          "Request Text": "CREATE MULTISET TABLE fitness_db.Customers ,FALLBACK ,\r     NO BEFORE JOURNAL,\r     NO AFTER JOURNAL,\r     CHECKSUM = DEFAULT,\r     DEFAULT MERGEBLOCKRATIO,\r     MAP = TD_MAP1\r     (\r      CustomerID INTEGER NOT NULL,\r      FirstName VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,\r      LastName VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,\r      Email VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC,\r      Phone VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\r      Address VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC,\r      City VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,\r      State VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,\r      ZipCode VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\r      RegistrationDate DATE FORMAT 'YYYY-MM-DD')\rUNIQUE PRIMARY INDEX ( CustomerID );",
          "TableName": "Customers"
        }
      ],
      "metadata": {
        "tool_name": "base_tableDDL",
        "database": "fitness_db",
        "table": "fitness_db.Customers",
        "rows": 1
      }
    },
    {
      "status": "success",
      "results": [
        {
          "Request Text": "CREATE MULTISET TABLE fitness_db.ServiceTickets ,FALLBACK ,\r     NO BEFORE JOURNAL,\r     NO AFTER JOURNAL,\r     CHECKSUM = DEFAULT,\r     DEFAULT MERGEBLOCKRATIO,\r     MAP = TD_MAP1\r     (\r      TicketID INTEGER NOT NULL,\r      CustomerID INTEGER NOT NULL,\r      ProductID INTEGER NOT NULL,\r      TicketDate DATE FORMAT 'YYYY-MM-DD' NOT NULL,\r      IssueDescription VARCHAR(1000) CHARACTER SET LATIN NOT CASESPECIFIC,\r      Status VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\r      ResolutionDate DATE FORMAT 'YYYY-MM-DD', \rFOREIGN KEY ( CustomerID ) REFERENCES fitness_db.Customers ( CustomerID ),\rFOREIGN KEY ( ProductID ) REFERENCES fitness_db.Products ( ProductID ))\rUNIQUE PRIMARY INDEX ( TicketID );",
          "TableName": "ServiceTickets"
        }
      ],
      "metadata": {
        "tool_name": "base_tableDDL",
        "database": "fitness_db",
        "table": "fitness_db.ServiceTickets",
        "rows": 1
      }
    },
    {
      "status": "success",
      "results": [
        {
          "Request Text": "CREATE MULTISET TABLE fitness_db.Sales ,FALLBACK ,\r     NO BEFORE JOURNAL,\r     NO AFTER JOURNAL,\r     CHECKSUM = DEFAULT,\r     DEFAULT MERGEBLOCKRATIO,\r     MAP = TD_MAP1\r     (\r      SaleID INTEGER NOT NULL,\r      CustomerID INTEGER NOT NULL,\r      SaleDate TIMESTAMP(6) NOT NULL,\r      TotalAmount DECIMAL(12,2) NOT NULL,\r      SalesPersonID INTEGER, \rCONSTRAINT pk_sales PRIMARY KEY ( SaleID ), \rFOREIGN KEY ( CustomerID ) REFERENCES fitness_db.Customers ( CustomerID ))\r;",
          "TableName": "Sales"
        }
      ],
      "metadata": {
        "tool_name": "base_tableDDL",
        "database": "fitness_db",
        "table": "fitness_db.Sales",
        "rows": 1
      }
    }
  ],
  "result_of_phase_3": [
    {
      "status": "success",
      "results": [
        {
          "ColumnName": "ProductName",
          "Datatype": "VARCHAR(100) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Products"
        },
        {
          "ColumnName": "Price",
          "Datatype": "DECIMAL(10,2)",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Products"
        },
        {
          "ColumnName": "ProductID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Products"
        },
        {
          "ColumnName": "ProductType",
          "Datatype": "VARCHAR(50) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Products"
        },
        {
          "ColumnName": "Brand",
          "Datatype": "VARCHAR(50) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Products"
        },
        {
          "ColumnName": "StockQuantity",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Products"
        }
      ],
      "metadata": {
        "tool_name": "qlty_columnSummary",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "rows": 6
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ColumnName": "SaleID",
          "Datatype": "INTEGER",
          "NonNullCount": "103",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "103",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "SaleDetails"
        },
        {
          "ColumnName": "UnitPrice",
          "Datatype": "DECIMAL(10,2)",
          "NonNullCount": "103",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "103",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "SaleDetails"
        },
        {
          "ColumnName": "SaleDetailID",
          "Datatype": "INTEGER",
          "NonNullCount": "103",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "103",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "SaleDetails"
        },
        {
          "ColumnName": "ProductID",
          "Datatype": "INTEGER",
          "NonNullCount": "103",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "103",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "SaleDetails"
        },
        {
          "ColumnName": "Quantity",
          "Datatype": "INTEGER",
          "NonNullCount": "103",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "103",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "SaleDetails"
        }
      ],
      "metadata": {
        "tool_name": "qlty_columnSummary",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "rows": 5
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ColumnName": "FirstName",
          "Datatype": "VARCHAR(50) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "RegistrationDate",
          "Datatype": "DATE",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "Phone",
          "Datatype": "VARCHAR(20) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "CustomerID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "LastName",
          "Datatype": "VARCHAR(50) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "State",
          "Datatype": "VARCHAR(50) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "City",
          "Datatype": "VARCHAR(50) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "Email",
          "Datatype": "VARCHAR(100) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "Address",
          "Datatype": "VARCHAR(255) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        },
        {
          "ColumnName": "ZipCode",
          "Datatype": "VARCHAR(10) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Customers"
        }
      ],
      "metadata": {
        "tool_name": "qlty_columnSummary",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "rows": 10
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ColumnName": "CustomerID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "ServiceTickets"
        },
        {
          "ColumnName": "IssueDescription",
          "Datatype": "VARCHAR(1000) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "ServiceTickets"
        },
        {
          "ColumnName": "TicketID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "ServiceTickets"
        },
        {
          "ColumnName": "ProductID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "ServiceTickets"
        },
        {
          "ColumnName": "ResolutionDate",
          "Datatype": "DATE",
          "NonNullCount": "41",
          "NullCount": "59",
          "BlankCount": "None",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "59.0",
          "NonNullPercentage": "41.0",
          "TableName": "ServiceTickets"
        },
        {
          "ColumnName": "TicketDate",
          "Datatype": "DATE",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "ServiceTickets"
        },
        {
          "ColumnName": "Status",
          "Datatype": "VARCHAR(20) CHARACTER SET LATIN",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "0",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "ServiceTickets"
        }
      ],
      "metadata": {
        "tool_name": "qlty_columnSummary",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "rows": 7
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ColumnName": "CustomerID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Sales"
        },
        {
          "ColumnName": "SalesPersonID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Sales"
        },
        {
          "ColumnName": "SaleID",
          "Datatype": "INTEGER",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Sales"
        },
        {
          "ColumnName": "SaleDate",
          "Datatype": "TIMESTAMP(6)",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "None",
          "PositiveCount": "None",
          "NegativeCount": "None",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Sales"
        },
        {
          "ColumnName": "TotalAmount",
          "Datatype": "DECIMAL(12,2)",
          "NonNullCount": "100",
          "NullCount": "0",
          "BlankCount": "None",
          "ZeroCount": "0",
          "PositiveCount": "100",
          "NegativeCount": "0",
          "NullPercentage": "0.0",
          "NonNullPercentage": "100.0",
          "TableName": "Sales"
        }
      ],
      "metadata": {
        "tool_name": "qlty_columnSummary",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "rows": 5
      }
    }
  ],
  "result_of_phase_4": [
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "Price",
          "StatName": "BOTTOM5(1)",
          "StatValue": "10.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "BOTTOM5(2)",
          "StatValue": "14.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "BOTTOM5(3)",
          "StatValue": "19.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "BOTTOM5(4)",
          "StatValue": "21.95",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "BOTTOM5(5)",
          "StatValue": "24.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "1.4369493252515202",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "167468492.11521596",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "380.45298776794465",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "HARMONIC MEAN",
          "StatValue": "128.39179187587052",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "849.02",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "KURTOSIS",
          "StatValue": "9.391651780204356",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "MAXIMUM",
          "StatValue": "6999.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "MEAN",
          "StatValue": "905.1228",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "MEDIAN",
          "StatValue": "399.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "MINIMUM",
          "StatValue": "10.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "MODE",
          "StatValue": "999.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(1)",
          "StatValue": "14.95",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(10)",
          "StatValue": "39.986000000000004",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(25)",
          "StatValue": "149.98000000000002",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(5)",
          "StatValue": "27.84",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(50)",
          "StatValue": "399.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(75)",
          "StatValue": "999.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(90)",
          "StatValue": "2208.600000000001",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(95)",
          "StatValue": "3024.0494999999987",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "PERCENTILES(99)",
          "StatValue": "6500.040000000003",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "RANGE",
          "StatValue": "6988.01",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "SKEWNESS",
          "StatValue": "2.8674067833803587",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "1300.6155967297666",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "STANDARD ERROR",
          "StatValue": "130.06155967297667",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "SUM",
          "StatValue": "90512.28",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "TOP5(1)",
          "StatValue": "6999.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "TOP5(2)",
          "StatValue": "6495.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "TOP5(3)",
          "StatValue": "5999.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "TOP5(4)",
          "StatValue": "4599.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "TOP5(5)",
          "StatValue": "3499.99",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "TRIMMED MEAN",
          "StatValue": "512.595",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "249393220.4232",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "78.0",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "VARIANCE",
          "StatValue": "1691600.9304567268",
          "TableName": "Products",
          "ColumnName": "Price"
        },
        {
          "ATTRIBUTE": "Price",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "Price"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "Price",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "BOTTOM5(1)",
          "StatValue": "7.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "BOTTOM5(2)",
          "StatValue": "8.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "BOTTOM5(3)",
          "StatValue": "9.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "BOTTOM5(4)",
          "StatValue": "10.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "BOTTOM5(5)",
          "StatValue": "11.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "1.0931726699424213",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "2004323.44",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "74.09644779665638",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "HARMONIC MEAN",
          "StatValue": "42.040324122694265",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "145.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "KURTOSIS",
          "StatValue": "1.889626534338205",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "MAXIMUM",
          "StatValue": "600.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "MEAN",
          "StatValue": "130.16",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "MEDIAN",
          "StatValue": "70.5",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "MINIMUM",
          "StatValue": "7.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "MODE",
          "StatValue": "35.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(1)",
          "StatValue": "7.99",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(10)",
          "StatValue": "17.8",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(25)",
          "StatValue": "35.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(5)",
          "StatValue": "11.95",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(50)",
          "StatValue": "70.5",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(75)",
          "StatValue": "180.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(90)",
          "StatValue": "353.0000000000002",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(95)",
          "StatValue": "451.4999999999999",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "PERCENTILES(99)",
          "StatValue": "550.5000000000002",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "RANGE",
          "StatValue": "593.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "SKEWNESS",
          "StatValue": "1.6296619279942401",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "142.28735471970555",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "STANDARD ERROR",
          "StatValue": "14.228735471970555",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "SUM",
          "StatValue": "13016.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "TOP5(1)",
          "StatValue": "600.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "TOP5(2)",
          "StatValue": "550.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "TOP5(3)",
          "StatValue": "500.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "TOP5(4)",
          "StatValue": "480.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "TOP5(5)",
          "StatValue": "450.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "TRIMMED MEAN",
          "StatValue": "84.9",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "3698486.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "90.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "VARIANCE",
          "StatValue": "20245.691313131312",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        },
        {
          "ATTRIBUTE": "StockQuantity",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "StockQuantity"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "StockQuantity",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "101.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "102.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "103.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "104.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "105.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.19276738854406655",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "83325.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "147.66203517302964",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "144.79041960341308",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "49.5",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MAXIMUM",
          "StatValue": "200.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MEAN",
          "StatValue": "150.5",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MEDIAN",
          "StatValue": "150.5",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MINIMUM",
          "StatValue": "101.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MODE",
          "StatValue": "101.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "101.99",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "110.9",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "125.75",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "105.95",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "150.5",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "175.25",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "190.10000000000002",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "195.05",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "199.01",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.011491975882016",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.9011491975882016",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "SUM",
          "StatValue": "15050.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(1)",
          "StatValue": "200.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(2)",
          "StatValue": "199.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(3)",
          "StatValue": "198.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(4)",
          "StatValue": "197.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(5)",
          "StatValue": "196.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "150.5",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "2348350.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "VARIANCE",
          "StatValue": "841.6666666666666",
          "TableName": "Products",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Products",
          "ColumnName": "ProductID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "ProductID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "BOTTOM5(1)",
          "StatValue": "10.99",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "BOTTOM5(2)",
          "StatValue": "14.99",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "BOTTOM5(3)",
          "StatValue": "19.99",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "BOTTOM5(4)",
          "StatValue": "21.95",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "BOTTOM5(5)",
          "StatValue": "24.99",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "1.4638173753383297",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "169531443.32416508",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "354.5317210125803",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "HARMONIC MEAN",
          "StatValue": "111.70062060591341",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "850.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "KURTOSIS",
          "StatValue": "9.671599116013837",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "MAXIMUM",
          "StatValue": "6999.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "MEAN",
          "StatValue": "880.7205825242719",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "MEDIAN",
          "StatValue": "399.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "MINIMUM",
          "StatValue": "10.99",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "MODE",
          "StatValue": "999.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(1)",
          "StatValue": "11.07",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(10)",
          "StatValue": "35.982000000000006",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(25)",
          "StatValue": "149.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(5)",
          "StatValue": "22.254",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(50)",
          "StatValue": "399.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(75)",
          "StatValue": "999.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(90)",
          "StatValue": "2178.2",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(95)",
          "StatValue": "2948.599999999996",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "PERCENTILES(99)",
          "StatValue": "6485.099800000002",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "RANGE",
          "StatValue": "6988.01",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "SKEWNESS",
          "StatValue": "2.9053409914875012",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "1289.2140915171244",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "STANDARD ERROR",
          "StatValue": "127.03003901938033",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "SUM",
          "StatValue": "90714.22",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "TOP5(1)",
          "StatValue": "6999.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "TOP5(2)",
          "StatValue": "6495.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "TOP5(3)",
          "StatValue": "5999.99",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "TOP5(4)",
          "StatValue": "4599.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "TOP5(5)",
          "StatValue": "3499.99",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "TRIMMED MEAN",
          "StatValue": "494.9150793650794",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "249425324.0058",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "77.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "VARIANCE",
          "StatValue": "1662072.9737663243",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        },
        {
          "ATTRIBUTE": "UnitPrice",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "UnitPrice"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "UnitPrice",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "BOTTOM5(1)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "BOTTOM5(2)",
          "StatValue": "2.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.1642000513375526",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "2.9126213592233006",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "1.0203939240935582",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "HARMONIC MEAN",
          "StatValue": "1.0147783251231528",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "KURTOSIS",
          "StatValue": "30.900815841584166",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "MAXIMUM",
          "StatValue": "2.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "MEAN",
          "StatValue": "1.029126213592233",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "MEDIAN",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "MINIMUM",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "MODE",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(1)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(10)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(25)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(5)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(50)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(75)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(90)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(95)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "PERCENTILES(99)",
          "StatValue": "2.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "RANGE",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "SKEWNESS",
          "StatValue": "5.683402727424986",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "0.1689825771046658",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "STANDARD ERROR",
          "StatValue": "0.016650348072088237",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "SUM",
          "StatValue": "106.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "TOP5(1)",
          "StatValue": "2.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "TOP5(2)",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "TRIMMED MEAN",
          "StatValue": "1.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "112.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "2.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "VARIANCE",
          "StatValue": "0.02855511136493432",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        },
        {
          "ATTRIBUTE": "Quantity",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "Quantity"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "Quantity",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 38
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "5001.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "5002.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "5003.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "5004.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "5005.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.005913999957850768",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "91052.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "inf",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "5051.825014946784",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "51.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "MAXIMUM",
          "StatValue": "5103.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "MEAN",
          "StatValue": "5052.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "MEDIAN",
          "StatValue": "5052.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "MINIMUM",
          "StatValue": "5001.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "MODE",
          "StatValue": "5001.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "5002.02",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "5011.2",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "5026.5",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "5006.1",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "5052.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "5077.5",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "5092.8",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "5097.9",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "5101.98",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "RANGE",
          "StatValue": "102.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.87752778706208",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.943920288775949",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "SUM",
          "StatValue": "520356.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "TOP5(1)",
          "StatValue": "5103.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "TOP5(2)",
          "StatValue": "5102.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "TOP5(3)",
          "StatValue": "5101.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "TOP5(4)",
          "StatValue": "5100.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "TOP5(5)",
          "StatValue": "5099.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "5052.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "2628929564.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "VARIANCE",
          "StatValue": "892.6666666666666",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        },
        {
          "ATTRIBUTE": "SaleDetailID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleDetailID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "SaleDetailID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "1001.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "1002.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "1003.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "1004.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "1005.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.02802273760929229",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "88192.05825242716",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "inf",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "1048.4951637518795",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "51.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2379360835637412",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MAXIMUM",
          "StatValue": "1100.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MEAN",
          "StatValue": "1049.3106796116506",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MEDIAN",
          "StatValue": "1049.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MINIMUM",
          "StatValue": "1001.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MODE",
          "StatValue": "1011.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "1002.02",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "1010.2",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "1023.5",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "1006.1",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "1049.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "1074.5",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "1089.8",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "1094.9",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "1098.98",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "SKEWNESS",
          "StatValue": "0.04296934205804725",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.40455784538545",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.897317175653385",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "SUM",
          "StatValue": "108079.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(1)",
          "StatValue": "1100.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(2)",
          "StatValue": "1099.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(3)",
          "StatValue": "1098.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(4)",
          "StatValue": "1097.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(5)",
          "StatValue": "1096.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "1049.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "113496641.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "VARIANCE",
          "StatValue": "864.6280220826192",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "SaleID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "SaleID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "101.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "102.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "104.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "105.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.19115253773938612",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "84118.4077669903",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "147.4517299088383",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "144.6398614736261",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "48.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.1605186898125281",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MAXIMUM",
          "StatValue": "200.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MEAN",
          "StatValue": "150.23300970873785",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MEDIAN",
          "StatValue": "150.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MINIMUM",
          "StatValue": "101.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MODE",
          "StatValue": "107.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "102.02",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "110.4",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "126.5",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "106.1",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "150.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "174.5",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "189.8",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "194.89999999999998",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "198.98000000000002",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "103.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "SKEWNESS",
          "StatValue": "0.016878670555318467",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "28.717421058051073",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.8296115761869536",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "SUM",
          "StatValue": "15474.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(1)",
          "StatValue": "200.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(2)",
          "StatValue": "199.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(3)",
          "StatValue": "198.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(4)",
          "StatValue": "197.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(5)",
          "StatValue": "196.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "150.12698412698413",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "2408824.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "99.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "VARIANCE",
          "StatValue": "824.6902722253951",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "SaleDetails",
          "ColumnName": "ProductID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "ProductID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "1.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "2.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "3.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "4.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "5.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.574484989621426",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "83325.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "37.9926893448343",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "19.277563597396004",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "49.5",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MAXIMUM",
          "StatValue": "100.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MEAN",
          "StatValue": "50.5",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MEDIAN",
          "StatValue": "50.5",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MINIMUM",
          "StatValue": "1.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MODE",
          "StatValue": "1.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "1.99",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "10.9",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "25.75",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "5.95",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "50.5",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "75.25",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "90.10000000000001",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "95.05",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "99.01",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.011491975882016",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.9011491975882016",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "SUM",
          "StatValue": "5050.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(1)",
          "StatValue": "100.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(2)",
          "StatValue": "99.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(3)",
          "StatValue": "98.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(4)",
          "StatValue": "97.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(5)",
          "StatValue": "96.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "50.5",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "338350.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "VARIANCE",
          "StatValue": "841.6666666666666",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Customers",
          "ColumnName": "CustomerID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "CustomerID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "101.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "102.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "103.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "104.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "105.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.19276738854406655",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "83325.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "147.66203517302964",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "144.79041960341308",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "49.5",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MAXIMUM",
          "StatValue": "200.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MEAN",
          "StatValue": "150.5",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MEDIAN",
          "StatValue": "150.5",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MINIMUM",
          "StatValue": "101.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "MODE",
          "StatValue": "101.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "101.99",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "110.9",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "125.75",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "105.95",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "150.5",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "175.25",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "190.10000000000002",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "195.05",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "199.01",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.011491975882016",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.9011491975882016",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "SUM",
          "StatValue": "15050.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(1)",
          "StatValue": "200.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(2)",
          "StatValue": "199.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(3)",
          "StatValue": "198.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(4)",
          "StatValue": "197.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TOP5(5)",
          "StatValue": "196.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "150.5",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "2348350.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "VARIANCE",
          "StatValue": "841.6666666666666",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        },
        {
          "ATTRIBUTE": "ProductID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "ProductID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "ProductID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "1.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "2.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "3.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "4.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "5.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.574484989621426",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "83325.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "37.9926893448343",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "19.277563597396004",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "49.5",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MAXIMUM",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MEAN",
          "StatValue": "50.5",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MEDIAN",
          "StatValue": "50.5",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MINIMUM",
          "StatValue": "1.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MODE",
          "StatValue": "1.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "1.99",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "10.9",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "25.75",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "5.95",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "50.5",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "75.25",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "90.10000000000001",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "95.05",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "99.01",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.011491975882016",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.9011491975882016",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "SUM",
          "StatValue": "5050.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(1)",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(2)",
          "StatValue": "99.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(3)",
          "StatValue": "98.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(4)",
          "StatValue": "97.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(5)",
          "StatValue": "96.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "50.5",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "338350.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "VARIANCE",
          "StatValue": "841.6666666666666",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "CustomerID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "CustomerID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "9001.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "9002.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "9003.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "9004.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "9005.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.003205512620947132",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "83325.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "inf",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "9050.407932514327",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "49.5",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "MAXIMUM",
          "StatValue": "9100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "MEAN",
          "StatValue": "9050.5",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "MEDIAN",
          "StatValue": "9050.5",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "MINIMUM",
          "StatValue": "9001.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "MODE",
          "StatValue": "9001.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "9001.99",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "9010.9",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "9025.75",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "9005.95",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "9050.5",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "9075.25",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "9090.1",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "9095.05",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "9099.01",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.011491975882016",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.9011491975882016",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "SUM",
          "StatValue": "905050.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "TOP5(1)",
          "StatValue": "9100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "TOP5(2)",
          "StatValue": "9099.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "TOP5(3)",
          "StatValue": "9098.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "TOP5(4)",
          "StatValue": "9097.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "TOP5(5)",
          "StatValue": "9096.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "9050.5",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "8191238350.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "VARIANCE",
          "StatValue": "841.6666666666666",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        },
        {
          "ATTRIBUTE": "TicketID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "ServiceTickets",
          "ColumnName": "TicketID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "TicketID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "BOTTOM5(1)",
          "StatValue": "10.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "BOTTOM5(2)",
          "StatValue": "14.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "BOTTOM5(3)",
          "StatValue": "19.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "BOTTOM5(4)",
          "StatValue": "21.95",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "BOTTOM5(5)",
          "StatValue": "24.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "1.4306165918632576",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "167056895.92067498",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "389.5932632366347",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "HARMONIC MEAN",
          "StatValue": "134.52441406134025",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "849.02",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "KURTOSIS",
          "StatValue": "9.424963916266076",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "MAXIMUM",
          "StatValue": "6999.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "MEAN",
          "StatValue": "908.0115000000001",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "MEDIAN",
          "StatValue": "399.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "MINIMUM",
          "StatValue": "10.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "MODE",
          "StatValue": "999.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(1)",
          "StatValue": "14.95",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(10)",
          "StatValue": "45.39",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(25)",
          "StatValue": "149.98000000000002",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(5)",
          "StatValue": "27.84",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(50)",
          "StatValue": "399.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(75)",
          "StatValue": "999.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(90)",
          "StatValue": "2208.600000000001",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(95)",
          "StatValue": "3024.0494999999987",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "PERCENTILES(99)",
          "StatValue": "6500.040000000003",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "RANGE",
          "StatValue": "6988.01",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "SKEWNESS",
          "StatValue": "2.873294957931939",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "1299.0163175026444",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "STANDARD ERROR",
          "StatValue": "129.90163175026444",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "SUM",
          "StatValue": "90801.15000000001",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "TOP5(1)",
          "StatValue": "6999.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "TOP5(2)",
          "StatValue": "6495.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "TOP5(3)",
          "StatValue": "5999.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "TOP5(4)",
          "StatValue": "4599.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "TOP5(5)",
          "StatValue": "3499.99",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "TRIMMED MEAN",
          "StatValue": "516.3265",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "249505384.3339",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "79.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "VARIANCE",
          "StatValue": "1687443.3931381311",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        },
        {
          "ATTRIBUTE": "TotalAmount",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "TotalAmount"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "TotalAmount",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "1001.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "1002.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "1003.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "1004.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "1005.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.027616841481087118",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "83325.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "1050.1032083326036",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "1049.7063267286171",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "49.5",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MAXIMUM",
          "StatValue": "1100.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MEAN",
          "StatValue": "1050.5",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MEDIAN",
          "StatValue": "1050.5",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MINIMUM",
          "StatValue": "1001.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "MODE",
          "StatValue": "1001.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "1001.99",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "1010.9",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "1025.75",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "1005.95",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "1050.5",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "1075.25",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "1090.1",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "1095.05",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "1099.01",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.011491975882016",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.9011491975882016",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "SUM",
          "StatValue": "105050.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(1)",
          "StatValue": "1100.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(2)",
          "StatValue": "1099.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(3)",
          "StatValue": "1098.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(4)",
          "StatValue": "1097.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TOP5(5)",
          "StatValue": "1096.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "1050.5",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "110438350.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "VARIANCE",
          "StatValue": "841.6666666666666",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        },
        {
          "ATTRIBUTE": "SaleID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "SaleID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "SaleID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "11.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "12.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.07545825324943571",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "67.95999999999994",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "10.94902558107801",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "10.918114143920594",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "2.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.544350016404825",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "MAXIMUM",
          "StatValue": "12.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "MEAN",
          "StatValue": "10.98",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "MEDIAN",
          "StatValue": "11.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "MINIMUM",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "MODE",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "11.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "12.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "12.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "12.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "12.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "RANGE",
          "StatValue": "2.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "SKEWNESS",
          "StatValue": "0.037665227942409514",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "0.8285316206788041",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "STANDARD ERROR",
          "StatValue": "0.08285316206788042",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "SUM",
          "StatValue": "1098.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "TOP5(1)",
          "StatValue": "12.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "TOP5(2)",
          "StatValue": "11.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "TOP5(3)",
          "StatValue": "10.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "10.966666666666667",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "12124.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "3.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "VARIANCE",
          "StatValue": "0.6864646464646458",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        },
        {
          "ATTRIBUTE": "SalesPersonID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "SalesPersonID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "SalesPersonID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 40
      }
    },
    {
      "status": "success",
      "results": [
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(1)",
          "StatValue": "1.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(2)",
          "StatValue": "2.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(3)",
          "StatValue": "3.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(4)",
          "StatValue": "4.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "BOTTOM5(5)",
          "StatValue": "5.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "COEFFICIENT OF VARIATION",
          "StatValue": "0.574484989621426",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "CORRECTED SUM OF SQUARES",
          "StatValue": "83325.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "GEOMETRIC MEAN",
          "StatValue": "37.9926893448343",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "HARMONIC MEAN",
          "StatValue": "19.277563597396004",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "INTERQUARTILE RANGE",
          "StatValue": "49.5",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "KURTOSIS",
          "StatValue": "-1.2",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MAXIMUM",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MEAN",
          "StatValue": "50.5",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MEDIAN",
          "StatValue": "50.5",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MINIMUM",
          "StatValue": "1.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "MODE",
          "StatValue": "1.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "NEGATIVE VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "NULL COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(1)",
          "StatValue": "1.99",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(10)",
          "StatValue": "10.9",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(25)",
          "StatValue": "25.75",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(5)",
          "StatValue": "5.95",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(50)",
          "StatValue": "50.5",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(75)",
          "StatValue": "75.25",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(90)",
          "StatValue": "90.10000000000001",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(95)",
          "StatValue": "95.05",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "PERCENTILES(99)",
          "StatValue": "99.01",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "POSITIVE VALUES COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "RANGE",
          "StatValue": "99.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "SKEWNESS",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "STANDARD DEVIATION",
          "StatValue": "29.011491975882016",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "STANDARD ERROR",
          "StatValue": "2.9011491975882016",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "SUM",
          "StatValue": "5050.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(1)",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(2)",
          "StatValue": "99.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(3)",
          "StatValue": "98.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(4)",
          "StatValue": "97.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TOP5(5)",
          "StatValue": "96.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "TRIMMED MEAN",
          "StatValue": "50.5",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "UNCORRECTED SUM OF SQUARES",
          "StatValue": "338350.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "UNIQUE ENTITY COUNT",
          "StatValue": "100.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "VARIANCE",
          "StatValue": "841.6666666666666",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        },
        {
          "ATTRIBUTE": "CustomerID",
          "StatName": "ZERO VALUES COUNT",
          "StatValue": "0.0",
          "TableName": "Sales",
          "ColumnName": "CustomerID"
        }
      ],
      "metadata": {
        "tool_name": "qlty_univariateStatistics",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "CustomerID",
        "stats_calculated": [
          "ALL"
        ],
        "rows": 44
      }
    }
  ],
  "result_of_phase_5": [
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "ProductType",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "Price",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "StockQuantity",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "Brand",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "ProductName",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Products",
        "column_name": "ProductID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "ProductID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "UnitPrice",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "Quantity",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "SaleID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.SaleDetails",
        "column_name": "SaleDetailID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "LastName",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "Phone",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "Address",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "City",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "ZipCode",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "RegistrationDate",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "State",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "Email",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "FirstName",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Customers",
        "column_name": "CustomerID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "ProductID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "IssueDescription",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "Status",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [
        {
          "TicketID": "9031",
          "CustomerID": "31",
          "ProductID": "131",
          "TicketDate": "2023-12-01",
          "IssueDescription": "Home gym weight stack is jammed.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9054",
          "CustomerID": "54",
          "ProductID": "154",
          "TicketDate": "2024-04-15",
          "IssueDescription": "Resistance band clip broke.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9010",
          "CustomerID": "10",
          "ProductID": "110",
          "TicketDate": "2023-07-10",
          "IssueDescription": "AirBike fan is excessively loud.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9012",
          "CustomerID": "12",
          "ProductID": "112",
          "TicketDate": "2023-08-01",
          "IssueDescription": "Suspension trainer strap is tearing.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9046",
          "CustomerID": "46",
          "ProductID": "146",
          "TicketDate": "2024-03-01",
          "IssueDescription": "Elliptical stride length feels short.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9094",
          "CustomerID": "94",
          "ProductID": "194",
          "TicketDate": "2024-12-15",
          "IssueDescription": "Power rack safety bars are difficult to adjust.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9050",
          "CustomerID": "50",
          "ProductID": "150",
          "TicketDate": "2024-03-20",
          "IssueDescription": "Hydrow screen is unresponsive to touch.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9052",
          "CustomerID": "52",
          "ProductID": "152",
          "TicketDate": "2024-04-05",
          "IssueDescription": "Airdyne bike screen is flickering.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9086",
          "CustomerID": "86",
          "ProductID": "186",
          "TicketDate": "2024-11-01",
          "IssueDescription": "Echelon bike subscription is not recognized.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9025",
          "CustomerID": "25",
          "ProductID": "125",
          "TicketDate": "2023-10-20",
          "IssueDescription": "Rower hydraulic arm has lost resistance.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9065",
          "CustomerID": "65",
          "ProductID": "165",
          "TicketDate": "2024-06-20",
          "IssueDescription": "Elliptical arm has a loose bolt.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9029",
          "CustomerID": "29",
          "ProductID": "129",
          "TicketDate": "2023-11-15",
          "IssueDescription": "Treadmill motor is making a grinding noise.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9063",
          "CustomerID": "63",
          "ProductID": "163",
          "TicketDate": "2024-06-10",
          "IssueDescription": "Kettlebell adjustment mechanism is faulty.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9002",
          "CustomerID": "2",
          "ProductID": "102",
          "TicketDate": "2023-04-01",
          "IssueDescription": "Console screen is not turning on.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9015",
          "CustomerID": "15",
          "ProductID": "115",
          "TicketDate": "2023-08-20",
          "IssueDescription": "Dumbbell collar is cracked.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9090",
          "CustomerID": "90",
          "ProductID": "190",
          "TicketDate": "2024-11-20",
          "IssueDescription": "Cast iron kettlebell handle is too thick.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9034",
          "CustomerID": "34",
          "ProductID": "134",
          "TicketDate": "2023-12-15",
          "IssueDescription": "Power rack pull-up bar feels loose.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9042",
          "CustomerID": "42",
          "ProductID": "142",
          "TicketDate": "2024-02-05",
          "IssueDescription": "Bike computer battery draining quickly.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9030",
          "CustomerID": "30",
          "ProductID": "130",
          "TicketDate": "2023-11-20",
          "IssueDescription": "Kettlebell vinyl coating is peeling.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9008",
          "CustomerID": "8",
          "ProductID": "108",
          "TicketDate": "2023-06-20",
          "IssueDescription": "Max Trainer resistance not changing.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9013",
          "CustomerID": "13",
          "ProductID": "113",
          "TicketDate": "2023-08-05",
          "IssueDescription": "Peloton screen freezes during class.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9021",
          "CustomerID": "21",
          "ProductID": "121",
          "TicketDate": "2023-10-01",
          "IssueDescription": "Elliptical makes a squeaking sound.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9070",
          "CustomerID": "70",
          "ProductID": "170",
          "TicketDate": "2024-07-20",
          "IssueDescription": "AirRunner tread is worn.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9067",
          "CustomerID": "67",
          "ProductID": "167",
          "TicketDate": "2024-07-05",
          "IssueDescription": "Rower Bluetooth connectivity issues.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9049",
          "CustomerID": "49",
          "ProductID": "149",
          "TicketDate": "2024-03-15",
          "IssueDescription": "Power rack paint is chipping.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9059",
          "CustomerID": "59",
          "ProductID": "159",
          "TicketDate": "2024-05-15",
          "IssueDescription": "Smith machine bar is not moving smoothly.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9047",
          "CustomerID": "47",
          "ProductID": "147",
          "TicketDate": "2024-03-05",
          "IssueDescription": "Ab roller wheel is sticking.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9044",
          "CustomerID": "44",
          "ProductID": "144",
          "TicketDate": "2024-02-15",
          "IssueDescription": "Barbell has developed some rust spots.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9068",
          "CustomerID": "68",
          "ProductID": "168",
          "TicketDate": "2024-07-10",
          "IssueDescription": "Bike resistance level 8 feels like level 1.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9057",
          "CustomerID": "57",
          "ProductID": "157",
          "TicketDate": "2024-05-05",
          "IssueDescription": "Bench is making a creaking noise under load.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9005",
          "CustomerID": "5",
          "ProductID": "105",
          "TicketDate": "2023-05-15",
          "IssueDescription": "Bike pedal has come loose.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9023",
          "CustomerID": "23",
          "ProductID": "123",
          "TicketDate": "2023-10-10",
          "IssueDescription": "Bench upholstery is torn.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9026",
          "CustomerID": "26",
          "ProductID": "126",
          "TicketDate": "2023-11-01",
          "IssueDescription": "Echelon bike will not connect to app.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9097",
          "CustomerID": "97",
          "ProductID": "197",
          "TicketDate": "2025-01-02",
          "IssueDescription": "Bowflex resistance rods feel weaker than advertised.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9062",
          "CustomerID": "62",
          "ProductID": "162",
          "TicketDate": "2024-06-05",
          "IssueDescription": "Bike seat is uncomfortable.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9084",
          "CustomerID": "84",
          "ProductID": "184",
          "TicketDate": "2024-10-15",
          "IssueDescription": "Competition kettlebell does not meet weight spec.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9081",
          "CustomerID": "81",
          "ProductID": "181",
          "TicketDate": "2024-10-01",
          "IssueDescription": "Elliptical speakers are crackling.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9076",
          "CustomerID": "76",
          "ProductID": "176",
          "TicketDate": "2024-09-01",
          "IssueDescription": "Treadmill fan is not working.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9020",
          "CustomerID": "20",
          "ProductID": "120",
          "TicketDate": "2023-09-22",
          "IssueDescription": "PowerBlock weight pin will not insert.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9082",
          "CustomerID": "82",
          "ProductID": "182",
          "TicketDate": "2024-10-05",
          "IssueDescription": "Treadmill subscription content is not updating.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9100",
          "CustomerID": "100",
          "ProductID": "200",
          "TicketDate": "2025-01-15",
          "IssueDescription": "Treadmill belt stops abruptly at high speeds.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9074",
          "CustomerID": "74",
          "ProductID": "174",
          "TicketDate": "2024-08-15",
          "IssueDescription": "Rower seat is not gliding smoothly.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9060",
          "CustomerID": "60",
          "ProductID": "160",
          "TicketDate": "2024-05-20",
          "IssueDescription": "Weight plate has a crack.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9038",
          "CustomerID": "38",
          "ProductID": "138",
          "TicketDate": "2024-01-05",
          "IssueDescription": "Fitbit will not sync with phone.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9098",
          "CustomerID": "98",
          "ProductID": "198",
          "TicketDate": "2025-01-05",
          "IssueDescription": "Fitbit strap broke.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9072",
          "CustomerID": "72",
          "ProductID": "172",
          "TicketDate": "2024-08-05",
          "IssueDescription": "TRX door anchor damaged the door frame.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9037",
          "CustomerID": "37",
          "ProductID": "137",
          "TicketDate": "2024-01-02",
          "IssueDescription": "Home gym power rods have lost tension.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9078",
          "CustomerID": "78",
          "ProductID": "178",
          "TicketDate": "2024-09-10",
          "IssueDescription": "Upright bike makes a clunking noise per revolution.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9091",
          "CustomerID": "91",
          "ProductID": "191",
          "TicketDate": "2024-12-01",
          "IssueDescription": "Home gym pulley is squeaking loudly.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9035",
          "CustomerID": "35",
          "ProductID": "135",
          "TicketDate": "2023-12-20",
          "IssueDescription": "Rower iFit subscription will not activate.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9055",
          "CustomerID": "55",
          "ProductID": "155",
          "TicketDate": "2024-04-20",
          "IssueDescription": "Elliptical heart rate monitor is inaccurate.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9089",
          "CustomerID": "89",
          "ProductID": "189",
          "TicketDate": "2024-11-15",
          "IssueDescription": "Treadmill iFit workout froze mid-session.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9095",
          "CustomerID": "95",
          "ProductID": "195",
          "TicketDate": "2024-12-20",
          "IssueDescription": "Rower console will not power on.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9003",
          "CustomerID": "3",
          "ProductID": "103",
          "TicketDate": "2023-04-10",
          "IssueDescription": "Weight selection dial is stuck.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9007",
          "CustomerID": "7",
          "ProductID": "107",
          "TicketDate": "2023-06-12",
          "IssueDescription": "Bench wobbles during use.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9041",
          "CustomerID": "41",
          "ProductID": "141",
          "TicketDate": "2024-02-01",
          "IssueDescription": "Push-up bar grip is slipping.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9079",
          "CustomerID": "79",
          "ProductID": "179",
          "TicketDate": "2024-09-15",
          "IssueDescription": "Aviron game is not loading.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9018",
          "CustomerID": "18",
          "ProductID": "118",
          "TicketDate": "2023-09-10",
          "IssueDescription": "Recumbent bike seat adjustment is stuck.",
          "Status": "Open",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        },
        {
          "TicketID": "9016",
          "CustomerID": "16",
          "ProductID": "116",
          "TicketDate": "2023-09-01",
          "IssueDescription": "Treadmill incline function not working.",
          "Status": "In Progress",
          "ResolutionDate": "None",
          "TableName": "ServiceTickets",
          "ColumnName": "ResolutionDate"
        }
      ],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "ResolutionDate",
        "rows_with_missing_values": 59
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "TicketDate",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "CustomerID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.ServiceTickets",
        "column_name": "TicketID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "SaleDate",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "SalesPersonID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "TotalAmount",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "CustomerID",
        "rows_with_missing_values": 0
      }
    },
    {
      "status": "success",
      "results": [],
      "metadata": {
        "tool_name": "qlty_rowsWithMissingValues",
        "database_name": "fitness_db",
        "table_name": "fitness_db.Sales",
        "column_name": "SaleID",
        "rows_with_missing_values": 0
      }
    }
  ]
}

--- INSTRUCTIONS ---
Your response MUST be a single JSON object that strictly follows the schema for a `PromptReportResponse`.

--- FIELD GUIDELINES ---
1.  `title`: REQUIRED. A clear, professional title for the report, derived from the ORIGINAL PROMPT GOAL.
2.  `executive_summary`: REQUIRED. A concise, high-level summary paragraph explaining the key findings of the analysis.
3.  `report_sections`: REQUIRED. A list of objects, where each object represents a logical section of the report. Each section object MUST have:
    - `title`: The title for that specific section (e.g., 'Data Quality Analysis', 'Table DDL').
    - `content`: The detailed findings for that section, formatted in markdown. You can use lists, bolding, and code blocks for clarity.

